{"version":3,"sources":["../../../source/test/library/exit-pool.test.js"],"names":["test","pool","ExitPool","code","Promise","resolve","onExit","on","index","process","log","off","is"],"mappings":";;AAAA;;AAEA;;;;AAEA,kBAAK,gBAAL,EAAuB,MAAOA,IAAP,IAAgB;AAErC,MAAIC,IAAI,GAAG,IAAIC,kBAAJ,CAAa;AAAE,uBAAmB;AAArB,GAAb,CAAX;AACA,MAAIC,IAAI,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAExC,QAAIC,MAAM,GAAG,IAAb;AAEAL,IAAAA,IAAI,CAACM,EAAL,CAAQ,MAAR,EAAgBD,MAAM,GAAG,CAACE,KAAD,EAAQC,OAAR,EAAiBN,IAAjB,KAA0B;AACjDH,MAAAA,IAAI,CAACU,GAAL,CAAU,6BAA4BF,KAAM,cAAaL,IAAK,eAA9D;AAEAF,MAAAA,IAAI,CAACU,GAAL,CAAS,MAAT,EAAiBL,MAAjB;AACAA,MAAAA,MAAM,GAAG,IAAT;AAEAD,MAAAA,OAAO,CAACF,IAAD,CAAP;AAED,KARD;AAUD,GAdgB,CAAjB;AAgBAH,EAAAA,IAAI,CAACY,EAAL,CAAQT,IAAR,EAAc,CAAd;AAED,CArBD","sourcesContent":["import Test from 'ava'\n\nimport { ExitPool } from './exit-pool.js'\n\nTest('new ExitPool()', async (test) => {\n\n  let pool = new ExitPool({ 'numberOfProcess': 1 })\n  let code = await new Promise((resolve) => {\n\n    let onExit = null\n\n    pool.on('exit', onExit = (index, process, code) => {\n      test.log(`pool.on('exit', onExit = (${index}, process, ${code}) => { ... })`)\n\n      pool.off('exit', onExit)\n      onExit = null\n\n      resolve(code)\n\n    })\n\n  })\n\n  test.is(code, 0)\n\n})\n"],"file":"exit-pool.test.cjs"}