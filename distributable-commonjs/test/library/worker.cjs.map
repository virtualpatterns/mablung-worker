{"version":3,"sources":["../../../source/test/library/worker.js"],"names":["Process","process","getPid","duration","Promise","resolve","setTimeout","pid","throwException","reject","WorkerExceptionError","throwUncaughtException","setImmediate","WorkerUncaughtExceptionError","rejectUnhandledException","WorkerUnhandledRejectionError"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAhB;;AAEO,SAASC,MAAT,CAAgBC,QAAQ,GAAG,CAA3B,EAA8B;AAEnC,MAAIA,QAAQ,GAAG,CAAf,EAAkB;AAEhB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAE9BC,MAAAA,UAAU,CAAC,MAAM;AACf;AACAD,QAAAA,OAAO,CAACL,OAAO,CAACO,GAAT,CAAP;AACD,OAHS,EAGPJ,QAHO,CAAV;AAKD,KAPM,CAAP;AASD,GAXD,MAWO;AACL,WAAOH,OAAO,CAACO,GAAf;AACD;AAEF;;AAEM,SAASC,cAAT,CAAwBL,QAAQ,GAAG,CAAnC,EAAsC;AAE3C,MAAIA,QAAQ,GAAG,CAAf,EAAkB;AAEhB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUI,MAAV,KAAqB;AAEtCH,MAAAA,UAAU,CAAC,MAAM;AACf;AACAG,QAAAA,MAAM,CAAC,IAAIC,0CAAJ,EAAD,CAAN;AACD,OAHS,EAGPP,QAHO,CAAV;AAKD,KAPM,CAAP;AASD,GAXD,MAWO;AACL,UAAM,IAAIO,0CAAJ,EAAN;AACD;AAEF;;AAEM,SAASC,sBAAT,GAAkC;AACvCC,EAAAA,YAAY,CAAC,MAAM;AAAE,UAAM,IAAIC,0DAAJ,EAAN;AAA0C,GAAnD,CAAZ;AACD;;AAEM,SAASC,wBAAT,GAAoC;AACzCF,EAAAA,YAAY,CAAC,MAAMR,OAAO,CAACK,MAAR,CAAe,IAAIM,4DAAJ,EAAf,CAAP,CAAZ;AACD","sourcesContent":["import { WorkerExceptionError } from './error/worker-exception-error.js'\nimport { WorkerUncaughtExceptionError } from './error/worker-uncaught-exception-error.js'\nimport { WorkerUnhandledRejectionError } from './error/worker-unhandled-rejection-error.js'\n\nconst Process = process\n\nexport function getPid(duration = 0) {\n\n  if (duration > 0) {\n\n    return new Promise((resolve) => {\n\n      setTimeout(() => {\n        /* c8 ignore next 1 */\n        resolve(Process.pid)\n      }, duration)\n\n    })\n\n  } else {\n    return Process.pid\n  }\n\n}\n\nexport function throwException(duration = 0) {\n\n  if (duration > 0) {\n\n    return new Promise((resolve, reject) => {\n\n      setTimeout(() => {\n        /* c8 ignore next 1 */\n        reject(new WorkerExceptionError())\n      }, duration)\n\n    })\n\n  } else {\n    throw new WorkerExceptionError()\n  }\n\n}\n\nexport function throwUncaughtException() {\n  setImmediate(() => { throw new WorkerUncaughtExceptionError() })\n}\n\nexport function rejectUnhandledException() {\n  setImmediate(() => Promise.reject(new WorkerUnhandledRejectionError()))\n}\n"],"file":"worker.cjs"}