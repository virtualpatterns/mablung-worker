{"version":3,"sources":["../../source/library/child-process.js"],"names":["ChildProcess","EventEmitter","constructor","userPath","userParameter","userOption","processPath","processParameter","Configuration","getParameter","_defaultParameter","processOption","getOption","_defaultOption","process","_createProcess","_processPath","_processParameter","_processOption","_process","_console","Null","_stream","_streamOption","_attach","on","__onMessage","message","_onMessage","error","__onError","_detach","_onError","__onDisconnect","log","_onDisconnect","__onExit","code","signal","Is","null","not","_onExit","_onKill","off","emit","path","parameter","option","console","pid","isConnected","connected","writeTo","stream","Stream","Writable","FileSystem","ensureDirSync","Path","dirname","createWriteStream","stderr","pipe","stdout","Console","send","Promise","resolve","reject","disconnect","kill","ChildProcessSignalError"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport EventEmitter from 'events'\nimport FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Stream from 'stream'\n\nimport { Null } from './null.js'\n\nimport { ChildProcessSignalError } from './error/child-process-signal-error.js'\n\nclass ChildProcess extends EventEmitter {\n\n  constructor(userPath, userParameter = {}, userOption = {}) { // \n    super()\n\n    let processPath = userPath\n    let processParameter = Configuration.getParameter(this._defaultParameter, userParameter)\n    let processOption = Configuration.getOption(this._defaultOption, userOption)\n\n    let process = this._createProcess(processPath, processParameter, processOption)\n\n    this._processPath = processPath\n    this._processParameter = processParameter\n    this._processOption = processOption\n\n    this._process = process\n\n    this._console = new Null()\n\n    this._stream = null\n    this._streamOption = null\n\n    this._attach()\n\n  }\n\n  /* c8 ignore next 1 */\n  _createProcess(/* path, parameter, option */) {}\n\n  _attach() {\n\n    this._process.on('message', this.__onMessage = (message) => {\n      // this._console.log('ChildProcess.on(\\'message\\', this.__onMessage = (message) => { ... })')\n      // this._console.dir(message)\n  \n      try {\n        this._onMessage(message)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('error', this.__onError = (error) => {\n      this._console.error('ChildProcess.on(\\'error\\', this.__onError = (error) => { ... })')\n      this._console.error(error)\n  \n      try {\n        this._detach()\n        this._onError(error)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n    this._process.on('disconnect', this.__onDisconnect = () => {\n      this._console.log('ChildProcess.on(\\'disconnect\\', this.__onDisconnect = () => { ... })')\n  \n      try {\n        this._onDisconnect()\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('exit', this.__onExit = (code, signal) => {\n      this._console.log(`ChildProcess.on('exit', this.__onExit = (${code}, ${Is.null(signal) ? signal : `'${signal}'`}) => { ... })`)\n\n      try {\n\n        this._detach()\n\n        if (Is.not.null(code)) {\n          this._onExit(code)\n          /* c8 ignore next 5 */\n        } else if (Is.not.null(signal)) {\n          this._onKill(signal)\n        } else {\n          this._onExit(0)\n        }\n\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n  }\n\n  _detach() {\n\n    if (this.__onExit) {\n      this._process.off('exit', this.__onExit)\n      delete this.__onExit\n    }\n\n    if (this.__onDisconnect) {\n      this._process.off('disconnect', this.__onDisconnect)\n      delete this.__onDisconnect\n    }\n\n    if (this.__onError) {\n      this._process.off('error', this.__onError)\n      delete this.__onError\n    }\n\n    if (this.__onMessage) {\n      this._process.off('message', this.__onMessage)\n      delete this.__onMessage\n    }\n\n  }\n\n  _onMessage(message) {\n    this.emit('message', message)\n  }\n\n  _onError(error) {\n    this.emit('error', error)\n  }\n\n  _onDisconnect() {\n    this.emit('disconnect')\n  }\n\n  _onExit(code) {\n    this.emit('exit', code)\n  }\n\n  _onKill(signal) {\n    this.emit('kill', signal)\n  }\n\n  /* c8 ignore next 3 */\n  get path() {\n    return this._processPath\n  }\n\n  get _defaultParameter() {\n    return {}\n  }\n\n  /* c8 ignore next 3 */\n  get parameter() {\n    return this._processParameter\n  }\n\n  get _defaultOption() {\n    return {\n      'serialization': 'advanced',\n      'stdio': 'pipe'\n    }\n  }\n\n  get option() {\n    return this._processOption\n  }\n\n  get console() {\n    return this._console\n  }\n\n  get pid() {\n    return this._process.pid\n  }\n\n  get isConnected() {\n    return this._process.connected\n  }\n\n  writeTo(path, option = { 'autoClose': true, 'emitClose': true, 'encoding': 'utf8', 'flags': 'a+' }) {\n\n    let stream = null\n\n    switch (true) {\n      /* c8 ignore next 3 */\n      case path instanceof Stream.Writable:\n        stream = path\n        break\n      default:\n        FileSystem.ensureDirSync(Path.dirname(path))\n        stream = FileSystem.createWriteStream(path, option)\n    }\n\n    this._process.stderr.pipe(stream, { 'end': false })\n    this._process.stdout.pipe(stream, { 'end': false })\n\n    this._console = new Console({\n      'colorMode': false,\n      'ignoreErrors': false,\n      'stderr': stream,\n      'stdout': stream\n    })\n\n    this._stream = stream\n    this._streamOption = option\n        \n  }\n\n  send(message) {\n    // this._console.log('ChildProcess.send(message) { ... }')\n    // this._console.dir(message)\n\n    return new Promise((resolve, reject) => {\n      \n      this._process.send(message, (error) => {\n\n        if (Is.null(error)) {\n          resolve()\n        } else {\n          reject(error)\n        }\n\n      })\n\n    })\n\n  }\n\n  disconnect() {\n    this._process.disconnect()\n  }\n\n  signal(signal) {\n\n    if (this._process.kill(signal)) {\n      // do nothing\n    /* c8 ignore next 3 */\n    } else {\n      throw new ChildProcessSignalError(signal, this._process.pid)\n    }\n\n  }\n  \n  kill(signal = 'SIGINT') {\n    this.signal(signal)\n  }\n\n}\n\nexport { ChildProcess }"],"file":"child-process.cjs"}