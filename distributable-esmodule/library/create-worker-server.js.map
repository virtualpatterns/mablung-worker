{"version":3,"sources":["../../source/library/create-worker-server.js"],"names":["Command","FileSystem","JSON5","Process","process","Require","_createRequire","import","meta","url","Package","parse","readFileSync","resolve","version","option","argv","workerServerClass","workerServerClassPath","default","importPath"],"mappings":"yDAAA,OAAO,qDAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,IAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGC,OAAhB;AACA,MAAMC,OAAO,GATbC,cAAc,CAACC,MAAM,CAACC,IAAP,CAAYC,GAAb,CASd;;AAEA,MAAMC,OAAO,GAAGR,KAAK,CAACS,KAAN,CAAYV,UAAU,CAACW,YAAX,CAAwBP,OAAO,CAACQ,OAAR,CAAgB,oBAAhB,CAAxB,EAA+D,EAAE,YAAY,OAAd,EAA/D,CAAZ,CAAhB;;AAEC,CAAC,YAAY;;AAEZb,EAAAA,OAAO,CAACc,OAAR,CAAgBJ,OAAO,CAACI,OAAxB;AACAd,EAAAA,OAAO,CAACe,MAAR,CAAe,mCAAf,EAAoD,2CAApD,EAAiGV,OAAO,CAACQ,OAAR,CAAgB,oBAAhB,CAAjG;AACAb,EAAAA,OAAO,CAACe,MAAR,CAAe,sBAAf,EAAuC,8BAAvC,EAAuEV,OAAO,CAACQ,OAAR,CAAgB,aAAhB,CAAvE;;AAEAb,EAAAA,OAAO,CAACW,KAAR,CAAcR,OAAO,CAACa,IAAtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,iBAAiB,GAAG,IAAxB;AACAA,EAAAA,iBAAiB,GAAG,MAAM,OAAOjB,OAAO,CAACkB,qBAAf,CAA1B,CAlBY,CAkBoD;AAChED,EAAAA,iBAAiB,GAAGA,iBAAiB,CAACE,OAAlB,IAA6BF,iBAAjD;;AAEA;AACA;;AAEA,QAAO,IAAIA,iBAAJ,EAAD,CAA0BV,MAA1B,CAAiCP,OAAO,CAACoB,UAAzC,CAAN;;AAED,CA1BA","sourcesContent":["import '@virtualpatterns/mablung-source-map-support/install'\nimport Command from 'commander'\nimport FileSystem from 'fs'\nimport JSON5 from 'json5'\n// import Path from 'path'\n// import URL from 'url'\n// import Utilities from 'util'\n\nconst Process = process\nconst Require = __require\n\nconst Package = JSON5.parse(FileSystem.readFileSync(Require.resolve('../../package.json'), { 'encoding': 'utf-8' }))\n\n;(async () => {\n\n  Command.version(Package.version)\n  Command.option('--worker-server-class-path <path>', 'Path to the server class to import/create', Require.resolve('./worker-server.js'))\n  Command.option('--import-path <path>', 'Path to the module to import', Require.resolve('./worker.js'))\n\n  Command.parse(Process.argv)\n\n  // console.log('-'.repeat(80))\n  // console.log(`Process.version               = '${Process.version}'`)\n  // console.log(`Package.version               = 'v${Package.version}'`)\n  // console.log(`Process.argv[0]               = '${Process.argv[0]}'`)\n  // console.log(`Process.execArgv              = ${Utilities.inspect(Process.execArgv)}`)\n  // console.log(`Process.argv[1]               = '${Path.relative(Process.cwd(), Process.argv[1])}'`)\n  // console.log(`Command.workerServerClassPath = '${Path.relative(Process.cwd(), Command.workerServerClassPath)}'`)\n  // console.log(`Command.importPath            = '${Path.relative(Process.cwd(), Command.importPath)}'`)\n\n  let workerServerClass = null\n  workerServerClass = await import(Command.workerServerClassPath) // URL.pathToFileURL(Command.workerServerClassPath))\n  workerServerClass = workerServerClass.default || workerServerClass\n\n  // console.log(`workerServerClass.name        = ${workerServerClass.name}`)\n  // console.log('-'.repeat(80))\n\n  await (new workerServerClass()).import(Command.importPath)\n\n})()\n"],"file":"create-worker-server.js"}