{"version":3,"sources":["../../source/library/worker-server.js"],"names":["Configuration","Is","DefaultChangeCase","ModuleChangeCase","URL","WorkerServerNoIPCChannelError","PascalCase","Process","process","WorkerServer","constructor","userOption","_option","getOption","defaultOption","_module","_modulePath","_attach","on","__onMessage","message","_detachReadyInterval","_onMessage","error","console","__onDisconnect","_detachDisconnect","__onExit","code","_detach","_readyInterval","setInterval","send","readyInterval","clearInterval","off","import","path","module","default","Promise","resolve","reject","null","methodName","type","_onPing","cpuUsage","user","system","returnValue","env","WORKER_POOL_INDEX","parseInt","pid","_onApply","apply","parameter","_onExit","exit"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport DefaultChangeCase, * as ModuleChangeCase from 'change-case'\nimport URL from 'url'\n\nimport { WorkerServerNoIPCChannelError } from './error/worker-server-no-ipc-channel-error.js'\n\nconst { 'pascalCase': PascalCase } = DefaultChangeCase || ModuleChangeCase\nconst Process = process\n\nclass WorkerServer {\n\n  constructor(userOption = {}) {\n\n    this._option = Configuration.getOption(this.defaultOption, userOption)\n\n    this._module = null\n    this._modulePath = null\n\n    this._attach()\n\n  }\n\n  get defaultOption() {\n    return { 'readyInterval': 1000 }\n  }\n\n  _attach() {\n\n    Process.on('message', this.__onMessage = async (message) => {\n      // console.log('WorkerServer.on(\\'message\\', this.__onMessage = async (message) => { ... })')\n      // console.dir(message)\n\n      try {\n        this._detachReadyInterval()   \n        await this._onMessage(message) \n      /* c8 ignore next 3 */\n      } catch(error) {\n        console.error(error)\n      }\n\n    })\n\n    Process.on('disconnect', this.__onDisconnect = () => {\n      // console.log('WorkerServer.on(\\'disconnect\\', this.__onDisconnect = () => { ... })')\n\n      try {\n        this._detachReadyInterval()   \n        this._detachDisconnect()    \n      /* c8 ignore next 3 */\n      } catch(error) {\n        console.error(error)\n      }\n      \n    })\n\n    Process.on('exit', this.__onExit = (code) => {\n      // console.log(`WorkerServer.on('exit', this.__onExit = (${code}) => { ... })`)\n\n      try {\n        this._detach()\n      /* c8 ignore next 3 */\n      } catch(error) {\n        console.error(error)\n      }\n        \n    })\n\n    this._readyInterval = setInterval(async () => {\n\n      try {\n        await this.send({ 'type': 'ready' })\n      /* c8 ignore next 4 */\n      } catch (error) {\n        this._detachReadyInterval()\n        console.error(error)\n      }\n\n    }, this._option.readyInterval)\n\n  }\n\n  _detachReadyInterval() {\n\n    if (this._readyInterval) {\n      clearInterval(this._readyInterval)\n      delete this._readyInterval\n    }\n\n  }\n\n  _detachDisconnect() {\n\n    if (this.__onDisconnect) {\n      Process.off('disconnect', this.__onDisconnect)\n      delete this.__onDisconnect\n    }\n\n  }\n\n  _detach() {\n\n    this._detachReadyInterval()    \n\n    if (this.__onExit) {\n      Process.off('exit', this.__onExit)\n      delete this.__onExit\n    }\n\n    this._detachDisconnect()\n\n    if (this.__onMessage) {\n      Process.off('message', this.__onMessage)\n      delete this.__onMessage\n    }\n\n  }\n\n  async import(path) {\n\n    let module = null\n    module = await import(path) // URL.pathToFileURL(path))\n    module = module.default || module\n\n    this._module = module\n    this._modulePath = path\n\n  }\n\n  send(message) {\n    // console.log('WorkerServer.send(message) { ... }')\n    // console.dir(message)\n\n    return new Promise((resolve, reject) => {\n\n      if (Process.send) {\n\n        Process.send(message, (error) => {\n\n          if (Is.null(error)) {\n            resolve()\n          /* c8 ignore next 3 */\n          } else {\n            reject(error)\n          }\n\n        })\n\n      /* c8 ignore next 3 */\n      } else {\n        reject(new WorkerServerNoIPCChannelError())\n      }\n\n    })\n\n  }\n\n  _onMessage(message) {\n    let methodName = `_on${PascalCase(message.type)}`\n    return this[methodName](message)\n  }\n\n  async _onPing(message) {\n\n    let cpuUsage = null\n    cpuUsage = Process.cpuUsage()\n    cpuUsage = (cpuUsage.user + cpuUsage.system) / 2.0\n\n    message.returnValue = { 'index': Process.env.WORKER_POOL_INDEX ? parseInt(Process.env.WORKER_POOL_INDEX) : 0, 'pid': Process.pid, 'cpuUsage': cpuUsage }\n\n    await this.send(message)\n\n  }\n\n  async _onApply(message) {\n\n    try {\n\n      let returnValue = null\n      returnValue = this._module[message.methodName].apply(this._module, message.parameter)\n      returnValue = returnValue instanceof Promise ? await returnValue : returnValue\n\n      delete message.error\n      message.returnValue = returnValue\n\n    } catch (error) {\n\n      message.error = error\n      delete message.returnValue\n\n    }\n\n    await this.send(message)\n\n  }\n\n  async _onExit(message) {\n\n    try {\n      Process.exit(message.code || 0)\n    /* c8 ignore next 3 */\n    } catch (error) {\n      console.error(error)\n    }\n\n  }\n\n}\n\nexport default WorkerServer"],"file":"worker-server.js"}