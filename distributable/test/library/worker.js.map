{"version":3,"sources":["../../../source/test/library/worker.js"],"names":["WorkerUncaughtExceptionError","WorkerUnhandledRejectionError","Process","process","onImport","option","console","log","dir","pid","getPid","duration","Promise","resolve","setTimeout","throwUncaughtException","setImmediate","rejectUnhandledException","reject","onRelease","onEnd"],"mappings":"AAAA,SAASA,4BAAT,QAA6C,4CAA7C;AACA,SAASC,6BAAT,QAA8C,6CAA9C;;AAEA,MAAMC,OAAO,GAAGC,OAAhB;;AAEA,OAAO,SAASC,QAAT,CAAkBC,MAAM,GAAG,EAA3B,EAA+B;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYH,MAAZ;AACA,SAAOH,OAAO,CAACO,GAAf;AACD;;AAED,OAAO,SAASC,MAAT,CAAgBC,QAAQ,GAAG,CAA3B,EAA8B;;AAEnC,MAAIA,QAAJ,EAAc;;AAEZ,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;;AAE9BC,MAAAA,UAAU,CAAC,MAAM;AACf;AACAD,QAAAA,OAAO,CAACX,OAAO,CAACO,GAAT,CAAP;AACD,OAHS,EAGPE,QAHO,CAAV;;AAKD,KAPM,CAAP;;AASD,GAXD,MAWO;AACL,WAAOT,OAAO,CAACO,GAAf;AACD;;AAEF;;AAED,OAAO,SAASM,sBAAT,GAAkC;AACvCC,EAAAA,YAAY,CAAC,MAAM,CAAE,MAAM,IAAIhB,4BAAJ,EAAN,CAA0C,CAAnD,CAAZ;AACD;AACD,OAAO,SAASiB,wBAAT,GAAoC;AACzCD,EAAAA,YAAY,CAAC,MAAMJ,OAAO,CAACM,MAAR,CAAe,IAAIjB,6BAAJ,EAAf,CAAP,CAAZ;AACD;;AAED,OAAO,SAASkB,SAAT,CAAmBd,MAAM,GAAG,EAA5B,EAAgC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYH,MAAZ;AACA,SAAOH,OAAO,CAACO,GAAf;AACD;;AAED,OAAO,SAASW,KAAT,CAAef,MAAM,GAAG,EAAxB,EAA4B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYH,MAAZ;AACA,SAAOH,OAAO,CAACO,GAAf;AACD","sourcesContent":["import { WorkerUncaughtExceptionError } from './error/worker-uncaught-exception-error.js'\nimport { WorkerUnhandledRejectionError } from './error/worker-unhandled-rejection-error.js'\n\nconst Process = process\n\nexport function onImport(option = {}) {\n  console.log('Worker.onImport(option) { ... }')\n  console.dir(option)\n  return Process.pid\n}\n\nexport function getPid(duration = 0) {\n\n  if (duration) {\n\n    return new Promise((resolve) => {\n\n      setTimeout(() => {\n        /* c8 ignore next 1 */\n        resolve(Process.pid)\n      }, duration)\n\n    })\n\n  } else {\n    return Process.pid\n  }\n\n}\n\nexport function throwUncaughtException() {\n  setImmediate(() => { throw new WorkerUncaughtExceptionError() })\n}\nexport function rejectUnhandledException() {\n  setImmediate(() => Promise.reject(new WorkerUnhandledRejectionError()))\n}\n\nexport function onRelease(option = {}) {\n  console.log('Worker.onRelease(option) { ... }')\n  console.dir(option)\n  return Process.pid\n}\n\nexport function onEnd(option = {}) {\n  console.log('Worker.onEnd(option) { ... }')\n  console.dir(option)\n  return Process.pid\n}\n"],"file":"worker.js"}