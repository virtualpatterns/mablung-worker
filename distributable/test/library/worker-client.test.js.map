{"version":3,"sources":["../../../source/test/library/worker-client.test.js"],"names":["Test","LoggedClient","WorkerClient","WorkerClientDurationExceededError","WorkerClientRejectedError","Process","process","Require","_createRequire","import","meta","url","test","worker","notThrows","notThrowsAsync","end","ping","resolve","is","module","getPid","pid","kill","throwsAsync","maximumDuration","option","Promise","all","throwException","disconnect","falsy","then","only","skip","Error","_getPid","release","uncaughtException","unhandledRejection"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { LoggedClient } from './logged-client.js'\nimport { WorkerClient } from '../../index.js'\n\nimport { WorkerClientDurationExceededError } from '../../index.js'\nimport { WorkerClientRejectedError } from '../../library/error/worker-client-rejected-error.js'\n\nconst Process = process\nconst Require = __require\n\nTest('new WorkerClient()', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient()})\n  await test.notThrowsAsync(worker.end())\n\n})\n\nTest('WorkerClient._onPing(message)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    await test.notThrowsAsync(worker.ping())\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest('WorkerClient._onApply(message)', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest('WorkerClient._onTerminate(signal)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await test.notThrowsAsync(worker.ping()) // establishes is ready\n  await worker.kill()\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest('WorkerClient.maximumDuration', async (test) => {\n\n  let maximumDuration = 2000\n  let worker = new WorkerClient({ 'maximumDuration': maximumDuration })\n\n  try {\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n    worker.maximumDuration = maximumDuration = 3000\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest('WorkerClient.module.getPid(duration) throws WorkerClientRejectedError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  await test.throwsAsync(Promise.all([ worker.module.getPid(2500), worker.end() ]), { 'instanceOf': WorkerClientRejectedError })\n\n})\n\nTest('WorkerClient.ping() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    let maximumDuration = null\n    maximumDuration = worker.maximumDuration\n\n    worker.maximumDuration = 1000    \n    await test.throwsAsync(worker.ping(), { 'instanceOf': WorkerClientDurationExceededError })\n    worker.maximumDuration = maximumDuration    \n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest('WorkerClient.end() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n\n  let maximumDuration = null\n  maximumDuration = worker.maximumDuration\n\n  worker.maximumDuration = 1    \n  await test.throwsAsync(worker.end(), { 'instanceOf': WorkerClientDurationExceededError })\n  worker.maximumDuration = maximumDuration    \n\n})\n\nTest('WorkerClient.module.throwException(duration) throws WorkerExceptionError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    await test.throwsAsync(worker.module.throwException(), { 'message': 'WorkerExceptionError' })\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest('WorkerClient.disconnect()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n  await test.notThrowsAsync(worker.disconnect())\n\n})\n\nTest('WorkerClient.module.then', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.falsy(worker.module.then)\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.only('new WorkerClient(string, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new LoggedClient(Require.resolve('./worker.js'), { 'maximumDuration': 5000 })})\n  await test.notThrowsAsync(worker.end())\n\n})\n\nTest.skip('WorkerClient.import(url)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n   \n    let pid = await worker.import(Require.resolve('./worker.js'))\n    test.is(pid, worker.pid)\n\n    await test.throwsAsync(worker.import(Require.resolve('./worker.js')), { 'instanceOf': Error })\n    test.is(await worker.module.getPid(), worker.pid)\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.skip('WorkerClient.import(url) throws Error', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    await worker.import(Require.resolve('./worker.js'))\n\n    await test.throwsAsync(worker.module._getPid(), { 'instanceOf': Error })\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.skip('WorkerClient.release()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    let pid = null\n    pid = await worker.import(Require.resolve('./worker.js'))\n    pid = await worker.release()\n\n    test.is(pid, worker.pid)\n    test.is(worker.module, null)\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.skip('WorkerClient.release() throws Error', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    await worker.import(Require.resolve('./worker.js'))\n    await worker.release()\n\n    await test.throwsAsync(worker.release(), { 'instanceOf': Error })\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.skip('WorkerClient.getPid(duration) throws WorkerClientRejectedError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.import(Require.resolve('./worker.js'))\n  await test.throwsAsync(Promise.all([ worker.module.getPid(2500), worker.end() ]), { 'instanceOf': WorkerClientRejectedError })\n\n})\n\nTest.skip('WorkerClient.whenMessageType(type) throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    await worker.import(Require.resolve('./worker.js'))\n\n    let maximumDuration = null\n    maximumDuration = worker.maximumDuration\n\n    worker.maximumDuration = 2000\n    await test.throwsAsync(worker.module.getPid(2500), { 'instanceOf': WorkerClientDurationExceededError })\n    worker.maximumDuration = maximumDuration\n\n  } finally {\n    await worker.end()\n  }\n\n})\n\nTest.skip('WorkerClient.whenRejected() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish is ready before call to end\n\n  let maximumDuration = null\n  maximumDuration = worker.maximumDuration\n\n  worker.maximumDuration = 1\n  await test.throwsAsync(worker.end(), { 'instanceOf': WorkerClientDurationExceededError })\n  worker.maximumDuration = maximumDuration\n\n})\n\nTest.skip('WorkerClient.disconnect() ...', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await test.notThrowsAsync(worker.ping()) // establishes is ready\n  await worker.disconnect()\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest.skip('WorkerClient.end()', async (test) => {\n\n  let worker = new WorkerClient() // LoggedClient() // \n\n  // this import is required because it contains the onEnd method\n  await worker.import(Require.resolve('./worker.js'))\n\n  await worker.end({ 'pid': worker.pid }) // also establishes is ready\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest.skip('WorkerClient.uncaughtException()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.uncaughtException() // also establishes is ready\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n \nTest.skip('WorkerClient.unhandledRejection()', async (test) => {\n\n  // this test requires that unhandled promises exit the node process\n  // this is enabled by the --unhandled-rejections=strict argument\n\n  let worker = new WorkerClient()\n\n  await worker.unhandledRejection() // also establishes is ready\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n"],"file":"worker-client.test.js"}