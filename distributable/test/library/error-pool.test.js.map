{"version":3,"sources":["../../../source/test/library/error-pool.test.js"],"names":["Test","ErrorPool","test","pool","error","Promise","resolve","once","processInformation","is","code"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,KAAjB;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;;AAEAD,IAAI,CAAC,iBAAD,EAAoB,MAAOE,IAAP,IAAgB;;AAEtC,MAAIC,IAAI,GAAG,IAAIF,SAAJ,CAAc,EAAE,mBAAmB,CAArB,EAAd,CAAX;AACA,MAAIG,KAAK,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACzCH,IAAAA,IAAI,CAACI,IAAL,CAAU,OAAV,EAAmB,CAACC,kBAAD,EAAqBJ,KAArB,KAA+B;AAChDE,MAAAA,OAAO,CAACF,KAAD,CAAP;AACD,KAFD;AAGD,GAJiB,CAAlB;;AAMAF,EAAAA,IAAI,CAACO,EAAL,CAAQL,KAAK,CAACM,IAAd,EAAoB,QAApB;;AAED,CAXG,CAAJ","sourcesContent":["import Test from 'ava'\n\nimport { ErrorPool } from './error-pool.js'\n\nTest('new ErrorPool()', async (test) => {\n\n  let pool = new ErrorPool({ 'numberOfProcess': 2 })\n  let error = await new Promise((resolve) => {\n    pool.once('error', (processInformation, error) => {\n      resolve(error)\n    })\n  })\n\n  test.is(error.code, 'ENOENT')\n\n})\n"],"file":"error-pool.test.js"}