{"version":3,"sources":["../../../source/test/library/error-client.test.js"],"names":["Is","Test","ErrorClient","WorkerClientInternalError","test","windows","throws","worker","error","whenRejected","is","internalError","code"],"mappings":"AAAA,SAASA,EAAT,QAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,KAAjB;;AAEA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,SAASC,yBAAT,QAA0C,gBAA1C;;AAEAF,IAAI,CAAC,mBAAD,EAAsB,MAAOG,IAAP,IAAgB;;AAExC,MAAIJ,EAAE,CAACK,OAAH,EAAJ,EAAkB;AAChBD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAM,IAAIJ,WAAJ,EAAlB,EAAqC,EAAE,QAAQ,SAAV,EAArC;AACD,GAFD,MAEO;;AAEL,QAAIK,MAAM,GAAG,IAAIL,WAAJ,EAAb;AACA,QAAIM,KAAK,GAAG,MAAMD,MAAM,CAACE,YAAP,CAAoBN,yBAApB,CAAlB;;AAEAC,IAAAA,IAAI,CAACM,EAAL,CAAQF,KAAK,CAACG,aAAN,CAAoBC,IAA5B,EAAkC,QAAlC;;AAED;;AAEF,CAbG,CAAJ","sourcesContent":["import { Is } from '@virtualpatterns/mablung-is'\nimport Test from 'ava'\n\nimport { ErrorClient } from './error-client.js'\n\nimport { WorkerClientInternalError } from '../../index.js'\n\nTest('new ErrorClient()', async (test) => {\n\n  if (Is.windows()) {\n    test.throws(() => new ErrorClient(), { 'code': 'UNKNOWN'})\n  } else {\n\n    let worker = new ErrorClient()\n    let error = await worker.whenRejected(WorkerClientInternalError)\n  \n    test.is(error.internalError.code, 'EACCES')\n\n  }\n\n})\n"],"file":"error-client.test.js"}