{"version":3,"sources":["../../source/library/worker-client.js"],"names":["ChangeCase","Configuration","ForkedProcess","WorkerClientModuleHandler","WorkerClientParameter","WorkerClientDurationExceededError","WorkerClientRejectedError","WorkerClientDisconnectedError","WorkerClientInternalError","WorkerClientExitedError","WorkerClientTerminatedError","pascalCase","PascalCase","Require","_createRequire","import","meta","url","WorkerClient","constructor","parameter","getConstructorParameter","_isReady","_module","_moduleUrl","defaultParameter","merge","resolve","defaultOption","maximumDuration","option","value","module","moduleUrl","whenReady","whenMessageType","type","Promise","reject","onMessage","onReject","timeout","on","message","off","clearTimeout","error","setTimeout","whenRejected","errorClass","send","requestMessage","responsePromise","sendPromise","responseMessage","all","returnValue","ping","Proxy","apply","methodName","release","end","code","uncaughtException","unhandledRejection","disconnect","kill","onReady","emit","onPing","onImport","onApply","onRelease","onDisconnect","onError","onExit","onTerminate","signal"],"mappings":"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","sourcesContent":["import ChangeCase from 'change-case'\nimport { Configuration } from '@virtualpatterns/mablung-configuration'\n\nimport { ForkedProcess } from './forked-process.js'\nimport { WorkerClientModuleHandler } from './worker-client-module-handler.js'\nimport { WorkerClientParameter } from './worker-client-parameter.js'\n\nimport { WorkerClientDurationExceededError } from './error/worker-client-duration-exceeded-error.js'\nimport { WorkerClientRejectedError } from './error/worker-client-rejected-error.js'\nimport { WorkerClientDisconnectedError } from './error/worker-client-disconnected-error.js'\nimport { WorkerClientInternalError } from './error/worker-client-internal-error.js'\nimport { WorkerClientExitedError } from './error/worker-client-exited-error.js'\nimport { WorkerClientTerminatedError } from './error/worker-client-terminated-error.js'\n\nconst { pascalCase: PascalCase } = ChangeCase\nconst Require = __require\n\nclass WorkerClient extends ForkedProcess {\n\n  constructor(...parameter) {\n    super(...WorkerClientParameter.getConstructorParameter(...parameter))\n\n    this._isReady = false\n\n    this._module = null\n    this._moduleUrl = null\n\n  }\n\n  get defaultParameter() {\n    return Configuration.merge(super.defaultParameter, { '--worker-server-class-path': Require.resolve('./worker-server.js') })\n  }\n\n  get defaultOption() {\n    return Configuration.merge(super.defaultOption, { 'maximumDuration': 5000 })\n  }\n\n  get maximumDuration() {\n    return this.option.maximumDuration\n  }\n\n  set maximumDuration(value) {\n    this.option.maximumDuration = value\n  }\n\n  get module() {\n    return this._module\n  }\n\n  get moduleUrl() {\n    return this._moduleUrl\n  }\n\n  async whenReady() {\n\n    if (!this._isReady) {\n      await this.whenMessageType('ready')\n      this._isReady = true\n    }\n\n  }\n\n  whenMessageType(type) {\n    // this.console.log(`WorkerClient.whenMessageType('${type}') { ... }`)\n\n    return new Promise((resolve, reject) => {\n\n      let onMessage = null\n      let onReject = null\n      let timeout = null\n   \n      this.on('message', onMessage = (message) => {\n        // this.console.log('WorkerClient.on(\\'message\\', onMessage = (message) => { ... })')\n        // this.console.dir(message)\n\n        if (message.type === type) {\n\n          this.off('message', onMessage)\n          onMessage = null\n\n          this.off('reject', onReject)\n          onReject = null\n\n          if (this.maximumDuration > 0) {\n            clearTimeout(timeout)\n            timeout = null\n          }\n          \n          resolve(message)\n    \n        }\n\n      })\n\n      this.on('reject', onReject = (error) => {\n        // this.console.error('WorkerClient.on(\\'reject\\', onReject = (error) => { ... })')\n        // this.console.error(error)\n  \n        this.off('message', onMessage)\n        onMessage = null\n\n        this.off('reject', onReject)\n        onReject = null\n\n        if (this.maximumDuration > 0) {\n          clearTimeout(timeout)\n          timeout = null\n        }\n      \n        reject(error)\n  \n      })\n\n      if (this.maximumDuration > 0) {\n  \n        timeout = setTimeout(() => {\n\n          this.off('message', onMessage)\n          onMessage = null\n  \n          this.off('reject', onReject)\n          onReject = null\n  \n          clearTimeout(timeout)\n          timeout = null\n          \n          reject(new WorkerClientDurationExceededError(this.maximumDuration))\n    \n        }, this.maximumDuration)\n  \n      }\n\n    })\n\n  }\n\n  whenRejected(errorClass = WorkerClientRejectedError) {\n    // this.console.log(`WorkerClient.whenRejected(${errorClass.name}) { ... }`)\n\n    return new Promise((resolve, reject) => {\n\n      let onReject = null\n      let timeout = null\n\n      this.on('reject', onReject = (error) => {\n        // this.console.error('WorkerClient.on(\\'reject\\', onReject = (error) => { ... })')\n        // this.console.error(error)\n\n        if (error instanceof errorClass) {\n\n          this.off('reject', onReject)\n          onReject = null\n  \n          if (this.maximumDuration > 0) {\n            clearTimeout(timeout)\n            timeout = null\n          }\n        \n          resolve(error)\n  \n        }\n  \n      })\n\n      if (this.maximumDuration > 0) {\n  \n        timeout = setTimeout(() => {\n\n          this.off('reject', onReject)\n          onReject = null\n\n          clearTimeout(timeout)\n          timeout = null\n          \n          reject(new WorkerClientDurationExceededError(this.maximumDuration))\n    \n        }, this.maximumDuration)\n\n      }\n\n    })\n\n  }\n\n  async send(requestMessage) {\n\n    let responsePromise = this.whenMessageType(requestMessage.type)\n    let sendPromise = super.send(requestMessage)\n\n    let [, responseMessage] = await Promise.all([ sendPromise, responsePromise ])\n\n    if (responseMessage.error) {\n      throw responseMessage.error\n    }\n\n    return responseMessage.returnValue\n\n  }\n\n  async ping() {\n    await this.whenReady()\n    return this.send({ 'type': 'ping' })\n  }\n\n  async import(url, option = {}) {\n\n    await this.whenReady()\n    let returnValue = await this.send({ 'type': 'import', 'url': url, 'option': option })\n\n    this._module = new Proxy(this, WorkerClientModuleHandler)\n    this._moduleUrl = url\n\n    return returnValue\n\n  }\n\n  async apply(methodName, parameter) {\n    await this.whenReady()\n    return this.send({ 'type': 'apply', 'methodName': methodName, 'parameter': parameter })\n  }\n\n  async release(option = {}) {\n\n    await this.whenReady()\n    let returnValue = await this.send({ 'type': 'release', 'option': option })\n\n    this._module = null\n    this._moduleUrl = null\n\n    return returnValue\n\n  }\n\n  async end(code = 0, option = {}) {\n    await this.whenReady()\n    await super.send({ 'type': 'end', 'code': code, 'option': option }) // there will be no response\n    await this.whenRejected(WorkerClientExitedError)\n  }\n\n  async uncaughtException() {\n    await this.whenReady()\n    await super.send({ 'type': 'uncaughtException' }) // there will be no response\n    await this.whenRejected(WorkerClientExitedError)\n  }\n\n  async unhandledRejection() {\n    await this.whenReady()\n    await super.send({ 'type': 'unhandledRejection' }) // there will be no response\n    await this.whenRejected(WorkerClientExitedError)\n  }\n\n  disconnect() {\n    super.disconnect()\n    return this.whenRejected(WorkerClientDisconnectedError)\n  }\n\n  kill(...parameter) {\n    super.kill(...parameter)\n    return this.whenRejected(WorkerClientTerminatedError)\n  }\n\n  onMessage(message) {\n\n    let methodName = `on${PascalCase(message.type)}`\n    this[methodName](message)\n\n    super.onMessage(message)\n\n  }\n\n  onReady(message) {\n    this.emit('ready', message)\n  }\n\n  onPing(message) {\n    this.emit('ping', message)\n  }\n\n  onImport(message) {\n    this.emit('import', message)\n  }\n\n  onApply(message) {\n    this.emit('apply', message)\n  }\n\n  onRelease(message) {\n    this.emit('release', message)\n  }\n\n  onDisconnect() {\n    this.onReject(new WorkerClientDisconnectedError())\n    super.onDisconnect()\n  }\n\n  onError(error) {\n    this.onReject(new WorkerClientInternalError(error))\n    super.onError(error)\n  }\n\n  onExit(code) {\n    this.onReject(new WorkerClientExitedError(code))\n    super.onExit(code)\n  }\n\n  onTerminate(signal) {\n    this.onReject(new WorkerClientTerminatedError(signal))\n    super.onTerminate(signal)\n  }\n\n  onReject(error) {\n    this.emit('reject', error)\n  }\n\n}\n\nexport { WorkerClient }"],"file":"worker-client.js"}