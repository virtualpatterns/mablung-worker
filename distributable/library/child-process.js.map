{"version":3,"sources":["../../source/library/child-process.js"],"names":["Configuration","Console","EventEmitter","FileSystem","Is","Stream","Null","ChildProcessSignalError","ChildProcess","constructor","userPath","userParameter","userOption","path","parameter","getParameter","defaultParameter","option","getOption","defaultOption","process","_createProcess","_path","_parameter","_option","_process","_console","attach","console","pid","isConnected","connected","on","_onMessage","message","log","dir","onMessage","error","_onDisconnect","onDisconnect","_onError","detach","onError","_onExit","code","signal","null","not","onExit","onTerminate","off","writeTo","outputStream","Writable","createWriteStream","stderr","pipe","stdout","send","Promise","resolve","reject","disconnect","kill","emit"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport EventEmitter from 'events'\nimport FileSystem from 'fs-extra'\nimport Is from '@pwn/is'\nimport Stream from 'stream'\n\nimport { Null } from './null.js'\n\nimport { ChildProcessSignalError } from './error/child-process-signal-error.js'\n\nclass ChildProcess extends EventEmitter {\n\n  constructor(userPath, userParameter = {}, userOption = {}) { // \n    super()\n\n    let path = userPath\n    let parameter = Configuration.getParameter(this.defaultParameter, userParameter)\n    let option = Configuration.getOption(this.defaultOption, userOption)\n\n    let process = this._createProcess(path, parameter, option)\n\n    this._path = path\n    this._parameter = parameter\n    this._option = option\n\n    this._process = process\n    this._console = new Null()\n\n    this.attach()\n\n  }\n\n  /* c8 ignore next 1 */\n  _createProcess(/* path, parameter, option */) {}\n\n  /* c8 ignore next 3 */\n  get path() {\n    return this._path\n  }\n\n  get defaultParameter() {\n    return {}\n  }\n\n  /* c8 ignore next 3 */\n  get parameter() {\n    return this._parameter\n  }\n\n  get defaultOption() {\n    return {\n      'serialization': 'advanced',\n      'stdio': 'pipe'\n    }\n  }\n\n  get option() {\n    return this._option\n  }\n\n  get console() {\n    return this._console\n  }\n\n  get pid() {\n    return this._process.pid\n  }\n\n  /* c8 ignore next 3 */\n  get isConnected() {\n    return this._process.connected\n  }\n\n  attach() {\n\n    this._process.on('message', this._onMessage = (message) => {\n      this.console.log('ChildProcess.on(\\'message\\', this._onMessage = (message) => { ... })')\n      this.console.dir(message)\n  \n      try {\n        this.onMessage(message)\n        /* c8 ignore next 3 */\n      } catch (error) {\n        this.console.error(error)\n      }\n\n    })\n\n    this._process.on('disconnect', this._onDisconnect = () => {\n      this.console.log('ChildProcess.on(\\'disconnect\\', this._onDisconnect = () => { ... })')\n  \n      try {\n        this.onDisconnect()\n        /* c8 ignore next 3 */\n      } catch (error) {\n        this.console.error(error)\n      }\n\n    })\n\n    this._process.on('error', this._onError = (error) => {\n      this.console.error('ChildProcess.on(\\'error\\', this._onError = (error) => { ... })')\n      this.console.error(error)\n  \n      try {\n        this.detach()\n        this.onError(error)\n        /* c8 ignore next 3 */\n      } catch (error) {\n        this.console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n    this._process.on('exit', this._onExit = (code, signal) => {\n      this.console.log(`ChildProcess.on('exit', this._onExit = (${code}, ${Is.null(signal) ? signal : `'${signal}'`}) => { ... })`)\n\n      try {\n\n        this.detach()\n\n        if (Is.not.null(code)) {\n          this.onExit(code)\n          /* c8 ignore next 5 */\n        } else if (Is.not.null(signal)) {\n          this.onTerminate(signal)\n        } else {\n          this.onExit(0)\n        }\n\n        /* c8 ignore next 3 */\n      } catch (error) {\n        this.console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n  }\n\n  detach() {\n\n    this._process.off('exit', this._onExit)\n    delete this._onExit\n\n    this._process.off('error', this._onError)\n    delete this._onError\n\n    this._process.off('disconnect', this._onDisconnect)\n    delete this._onDisconnect\n\n    this._process.off('message', this._onMessage)\n    delete this._onMessage\n\n  }\n\n  writeTo(path, option = { 'encoding': 'utf8', 'flags': 'a+' }) {\n\n    let outputStream = null\n\n    switch (true) {\n      /* c8 ignore next 3 */\n      case path instanceof Stream.Writable:\n        outputStream = path\n        break\n      default:\n        outputStream = FileSystem.createWriteStream(path, option)\n    }\n\n    this._process.stderr.pipe(outputStream, { 'end': false })\n    this._process.stdout.pipe(outputStream, { 'end': false })\n\n    this._console = new Console({\n      'colorMode': false,\n      'ignoreErrors': false,\n      'stderr': outputStream,\n      'stdout': outputStream\n    })\n        \n  }\n\n  send(message) {\n    this.console.log('ChildProcess.send(message) { ... }')\n    this.console.dir(message)\n\n    return new Promise((resolve, reject) => {\n      \n      this._process.send(message, (error) => {\n\n        if (Is.null(error)) {\n          resolve()\n        } else {\n          reject(error)\n        }\n\n      })\n\n    })\n\n  }\n\n  disconnect() {\n    this._process.disconnect()\n  }\n\n  signal(signal) {\n\n    if (this._process.kill(signal)) {\n      // do nothing\n      /* c8 ignore next 3 */\n    } else {\n      throw new ChildProcessSignalError(signal, this._process.pid)\n    }\n\n  }\n  \n  kill(signal = 'SIGINT') {\n    this.signal(signal)\n  }\n\n  onMessage(message) {\n    this.emit('message', message)\n  }\n\n  onDisconnect() {\n    this.emit('disconnect')\n  }\n\n  onError(error) {\n    this.emit('error', error)\n  }\n\n  onExit(code) {\n    this.emit('exit', code)\n  }\n\n  onTerminate(signal) {\n    this.emit('terminate', signal)\n  }\n\n}\n\nexport { ChildProcess }"],"file":"child-process.js"}