{"version":3,"sources":["../../source/library/child-process.js"],"names":["Configuration","Console","EventEmitter","FileSystem","Is","Path","Stream","Null","ChildProcessSignalError","ChildProcess","constructor","userPath","userParameter","userOption","processPath","processParameter","getParameter","_defaultParameter","processOption","getOption","_defaultOption","process","_createProcess","_processPath","_processParameter","_processOption","_process","_console","_stream","_streamOption","_attach","on","__onMessage","message","_onMessage","error","__onError","_detach","_onError","__onDisconnect","log","_onDisconnect","__onExit","code","signal","null","not","_onExit","_onKill","off","emit","path","parameter","option","console","pid","isConnected","connected","writeTo","stream","Writable","ensureDirSync","dirname","createWriteStream","stderr","pipe","stdout","send","Promise","resolve","reject","disconnect","kill"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport EventEmitter from 'events'\nimport FileSystem from 'fs-extra'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport Path from 'path'\nimport Stream from 'stream'\n\nimport { Null } from './null.js'\n\nimport { ChildProcessSignalError } from './error/child-process-signal-error.js'\n\nclass ChildProcess extends EventEmitter {\n\n  constructor(userPath, userParameter = {}, userOption = {}) { // \n    super()\n\n    let processPath = userPath\n    let processParameter = Configuration.getParameter(this._defaultParameter, userParameter)\n    let processOption = Configuration.getOption(this._defaultOption, userOption)\n\n    let process = this._createProcess(processPath, processParameter, processOption)\n\n    this._processPath = processPath\n    this._processParameter = processParameter\n    this._processOption = processOption\n\n    this._process = process\n\n    this._console = new Null()\n\n    this._stream = null\n    this._streamOption = null\n\n    this._attach()\n\n  }\n\n  /* c8 ignore next 1 */\n  _createProcess(/* path, parameter, option */) {}\n\n  _attach() {\n\n    this._process.on('message', this.__onMessage = (message) => {\n      // this._console.log('ChildProcess.on(\\'message\\', this.__onMessage = (message) => { ... })')\n      // this._console.dir(message)\n  \n      try {\n        this._onMessage(message)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('error', this.__onError = (error) => {\n      this._console.error('ChildProcess.on(\\'error\\', this.__onError = (error) => { ... })')\n      this._console.error(error)\n  \n      try {\n        this._detach()\n        this._onError(error)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n    this._process.on('disconnect', this.__onDisconnect = () => {\n      this._console.log('ChildProcess.on(\\'disconnect\\', this.__onDisconnect = () => { ... })')\n  \n      try {\n        this._onDisconnect()\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('exit', this.__onExit = (code, signal) => {\n      this._console.log(`ChildProcess.on('exit', this.__onExit = (${code}, ${Is.null(signal) ? signal : `'${signal}'`}) => { ... })`)\n\n      try {\n\n        this._detach()\n\n        if (Is.not.null(code)) {\n          this._onExit(code)\n          /* c8 ignore next 5 */\n        } else if (Is.not.null(signal)) {\n          this._onKill(signal)\n        } else {\n          this._onExit(0)\n        }\n\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n  }\n\n  _detach() {\n\n    if (this.__onExit) {\n      this._process.off('exit', this.__onExit)\n      delete this.__onExit\n    }\n\n    if (this.__onDisconnect) {\n      this._process.off('disconnect', this.__onDisconnect)\n      delete this.__onDisconnect\n    }\n\n    if (this.__onError) {\n      this._process.off('error', this.__onError)\n      delete this.__onError\n    }\n\n    if (this.__onMessage) {\n      this._process.off('message', this.__onMessage)\n      delete this.__onMessage\n    }\n\n  }\n\n  _onMessage(message) {\n    this.emit('message', message)\n  }\n\n  _onError(error) {\n    this.emit('error', error)\n  }\n\n  _onDisconnect() {\n    this.emit('disconnect')\n  }\n\n  _onExit(code) {\n    this.emit('exit', code)\n  }\n\n  _onKill(signal) {\n    this.emit('kill', signal)\n  }\n\n  /* c8 ignore next 3 */\n  get path() {\n    return this._processPath\n  }\n\n  get _defaultParameter() {\n    return {}\n  }\n\n  /* c8 ignore next 3 */\n  get parameter() {\n    return this._processParameter\n  }\n\n  get _defaultOption() {\n    return {\n      'serialization': 'advanced',\n      'stdio': 'pipe'\n    }\n  }\n\n  get option() {\n    return this._processOption\n  }\n\n  get console() {\n    return this._console\n  }\n\n  get pid() {\n    return this._process.pid\n  }\n\n  get isConnected() {\n    return this._process.connected\n  }\n\n  writeTo(path, option = { 'autoClose': true, 'emitClose': true, 'encoding': 'utf8', 'flags': 'a+' }) {\n\n    let stream = null\n\n    switch (true) {\n      /* c8 ignore next 3 */\n      case path instanceof Stream.Writable:\n        stream = path\n        break\n      default:\n        FileSystem.ensureDirSync(Path.dirname(path))\n        stream = FileSystem.createWriteStream(path, option)\n    }\n\n    this._process.stderr.pipe(stream, { 'end': false })\n    this._process.stdout.pipe(stream, { 'end': false })\n\n    this._console = new Console({\n      'colorMode': false,\n      'ignoreErrors': false,\n      'stderr': stream,\n      'stdout': stream\n    })\n\n    this._stream = stream\n    this._streamOption = option\n        \n  }\n\n  send(message) {\n    // this._console.log('ChildProcess.send(message) { ... }')\n    // this._console.dir(message)\n\n    return new Promise((resolve, reject) => {\n      \n      this._process.send(message, (error) => {\n\n        if (Is.null(error)) {\n          resolve()\n        } else {\n          reject(error)\n        }\n\n      })\n\n    })\n\n  }\n\n  disconnect() {\n    this._process.disconnect()\n  }\n\n  signal(signal) {\n\n    if (this._process.kill(signal)) {\n      // do nothing\n    /* c8 ignore next 3 */\n    } else {\n      throw new ChildProcessSignalError(signal, this._process.pid)\n    }\n\n  }\n  \n  kill(signal = 'SIGINT') {\n    this.signal(signal)\n  }\n\n}\n\nexport { ChildProcess }"],"file":"child-process.js"}