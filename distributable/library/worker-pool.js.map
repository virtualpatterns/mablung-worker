{"version":3,"sources":["../../source/library/worker-pool.js"],"names":["Configuration","Is","ChildProcessPool","WorkerClient","WorkerPoolModuleHandler","WorkerPoolParameter","Process","process","WorkerPool","constructor","parameter","getConstructorParameter","_module","_moduleUrl","_createProcess","index","path","option","merge","env","maximumDuration","value","getConnectedProcessInformation","forEach","workerClient","module","moduleUrl","selectProcessInformation","ping","getProcessInformation","pingResult","Promise","allSettled","map","fulfilledPingResult","filter","result","status","length","reduce","minimumResult","null","cpuUsage","reason","import","url","returnValue","all","Proxy","apply","methodName","release","end","code","uncaughtException","unhandledRejection","disconnect","kill"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport Is from '@pwn/is'\n\nimport { ChildProcessPool } from './child-process-pool.js'\nimport { WorkerClient } from './worker-client.js'\nimport { WorkerPoolModuleHandler } from './worker-pool-module-handler.js'\nimport { WorkerPoolParameter } from './worker-pool-parameter.js'\n\nconst Process = process\n\nclass WorkerPool extends ChildProcessPool {\n\n  constructor(...parameter) {\n    super(...WorkerPoolParameter.getConstructorParameter(...parameter))\n\n    this._module = null\n    this._moduleUrl = null\n    \n  }\n\n  _createProcess(index, path, parameter, option) {\n    return new WorkerClient(path, parameter, Configuration.merge(option, { 'env': Configuration.merge(Process.env, { 'WORKER_POOL_INDEX': index }) }))\n  }\n\n  get maximumDuration() {\n    return this.option.maximumDuration\n  }\n\n  set maximumDuration(value) {\n    this.option.maximumDuration = value\n    this.getConnectedProcessInformation().forEach(({ process: workerClient }) => workerClient.maximumDuration = value)\n  }\n\n  get module() {\n    return this._module\n  }\n\n  get moduleUrl() {\n    return this._moduleUrl\n  }\n\n  async selectProcessInformation(/* methodName, parameter */) {\n    let { index } = await this.ping()\n    return this.getProcessInformation(index)\n  }\n\n  async ping() {\n\n    let pingResult = await Promise.allSettled(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.ping()))\n\n    let fulfilledPingResult = pingResult.filter((result) => result.status === 'fulfilled')\n\n    if (fulfilledPingResult.length > 0) {\n\n      fulfilledPingResult = fulfilledPingResult.map((result) => result.value)\n      fulfilledPingResult = fulfilledPingResult.reduce((minimumResult, result) => Is.null(minimumResult) || result.cpuUsage < minimumResult.cpuUsage ? result : minimumResult, null)\n  \n      return fulfilledPingResult\n\n    } else {\n      throw pingResult[0].reason\n    }\n\n  }\n  \n  async import(url, option = {}) {\n\n    let returnValue = await Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.import(url, option)))\n\n    this._module = new Proxy(this, WorkerPoolModuleHandler)\n    this._moduleUrl = url\n\n    return returnValue\n\n  }\n\n  async apply(methodName, parameter) {\n    return (await this.selectProcessInformation(methodName, parameter)).process.apply(methodName, parameter)\n  }\n\n  async release(option = {}) {\n\n    let returnValue = await Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.release(option)))\n\n    this._module = null\n    this._moduleUrl = null\n\n    return returnValue\n\n  }\n\n  end(code = 0, option = {}) {\n    return Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.end(code, option)))\n  }\n\n  uncaughtException() {\n    return Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.uncaughtException()))\n  }\n\n  unhandledRejection() {\n    return Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.unhandledRejection()))\n  }\n\n  disconnect() {\n    return Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.disconnect()))\n  }\n\n  kill(...parameter) {\n    return Promise.all(this.getConnectedProcessInformation().map(({ process: workerClient }) => workerClient.kill(...parameter)))\n  }\n\n}\n\nexport { WorkerPool }"],"file":"worker-pool.js"}