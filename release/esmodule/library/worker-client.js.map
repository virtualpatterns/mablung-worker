{"version":3,"sources":["../../../source/esmodule/library/worker-client.js"],"names":[],"mappings":"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","file":"worker-client.js","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { ForkedProcess } from './forked-process.js'\nimport { WorkerClientModuleHandler } from './worker-client-module-handler.js'\nimport { WorkerClientParameter } from './worker-client-parameter.js'\nimport DefaultChangeCase, * as ModuleChangeCase from 'change-case'\n\nimport { WorkerClientDurationExceededError } from './error/worker-client-duration-exceeded-error.js'\nimport { WorkerClientRejectedError } from './error/worker-client-rejected-error.js'\nimport { WorkerClientDisconnectedError } from './error/worker-client-disconnected-error.js'\nimport { WorkerClientInternalError } from './error/worker-client-internal-error.js'\nimport { WorkerClientExitedError } from './error/worker-client-exited-error.js'\nimport { WorkerClientKilledError } from './error/worker-client-killed-error.js'\n\nconst { 'pascalCase': PascalCase } = DefaultChangeCase || ModuleChangeCase\n\nclass WorkerClient extends ForkedProcess {\n\n  constructor(...parameter) {\n    super(...WorkerClientParameter.getConstructorParameter(...parameter))\n\n    this._isReady = false\n\n    this._module = new Proxy(this, WorkerClientModuleHandler)\n\n  }\n\n  get _defaultOption() {\n    return Configuration.merge(super._defaultOption, { 'maximumDuration': 10000 })\n  }\n\n  _onMessage(message) {\n\n    let methodName = `_on${PascalCase(message.type)}`\n    this[methodName](message)\n\n    super._onMessage(message)\n\n  }\n\n  _onReady(message) {\n    this.emit('ready', message)\n  }\n\n  _onPing(message) {\n    this.emit('ping', message)\n  }\n\n  _onApply(message) {\n    this.emit('apply', message)\n  }\n\n  _onError(error) {\n    this._onReject(new WorkerClientInternalError(error))\n    super._onError(error)\n  }\n\n  _onDisconnect() {\n    this._onReject(new WorkerClientDisconnectedError())\n    super._onDisconnect()\n  }\n\n  _onExit(code) {\n    this._onReject(new WorkerClientExitedError(code))\n    super._onExit(code)\n  }\n\n  _onKill(signal) {\n    this._onReject(new WorkerClientKilledError(signal))\n    super._onKill(signal)\n  }\n\n  _onReject(error) {\n    this.emit('reject', error)\n  }\n\n  get maximumDuration() {\n    return this.option.maximumDuration\n  }\n\n  set maximumDuration(value) {\n    this.option.maximumDuration = value\n  }\n\n  get module() {\n    return this._module\n  }\n\n  async whenReady() {\n\n    if (!this._isReady) {\n      await this.whenMessageType('ready')\n      this._isReady = true\n    }\n\n  }\n\n  whenMessageType(type) {\n    // this.console.log(`WorkerClient.whenMessageType('${type}') { ... }`)\n\n    return new Promise((resolve, reject) => {\n\n      let onMessage = null\n      let onReject = null\n      let timeout = null\n   \n      this.on('message', onMessage = (message) => {\n        // this.console.log('WorkerClient.on(\\'message\\', onMessage = (message) => { ... })')\n        // this.console.dir(message)\n\n        if (message.type === type) {\n\n          this.off('message', onMessage)\n          onMessage = null\n\n          this.off('reject', onReject)\n          onReject = null\n\n          if (this.maximumDuration > 0) {\n            clearTimeout(timeout)\n            timeout = null\n          }\n          \n          resolve(message)\n    \n        }\n\n      })\n\n      this.on('reject', onReject = (error) => {\n        // this.console.error('WorkerClient.on(\\'reject\\', onReject = (error) => { ... })')\n        // this.console.error(error)\n  \n        this.off('message', onMessage)\n        onMessage = null\n\n        this.off('reject', onReject)\n        onReject = null\n\n        if (this.maximumDuration > 0) {\n          clearTimeout(timeout)\n          timeout = null\n        }\n      \n        reject(error)\n  \n      })\n\n      if (this.maximumDuration > 0) {\n  \n        timeout = setTimeout(() => {\n\n          this.off('message', onMessage)\n          onMessage = null\n  \n          this.off('reject', onReject)\n          onReject = null\n  \n          clearTimeout(timeout)\n          timeout = null\n          \n          reject(new WorkerClientDurationExceededError(this.maximumDuration))\n    \n        }, this.maximumDuration)\n  \n      }\n\n    })\n\n  }\n\n  whenRejected(errorClass = WorkerClientRejectedError) {\n    // this.console.log(`WorkerClient.whenRejected(${errorClass.name}) { ... }`)\n\n    return new Promise((resolve, reject) => {\n\n      let onReject = null\n      let timeout = null\n\n      this.on('reject', onReject = (error) => {\n        // this.console.error('WorkerClient.on(\\'reject\\', onReject = (error) => { ... })')\n        // this.console.error(error)\n\n        if (error instanceof errorClass) {\n\n          this.off('reject', onReject)\n          onReject = null\n  \n          if (this.maximumDuration > 0) {\n            clearTimeout(timeout)\n            timeout = null\n          }\n        \n          resolve(error)\n  \n        }\n  \n      })\n\n      if (this.maximumDuration > 0) {\n  \n        timeout = setTimeout(() => {\n\n          this.off('reject', onReject)\n          onReject = null\n\n          clearTimeout(timeout)\n          timeout = null\n          \n          reject(new WorkerClientDurationExceededError(this.maximumDuration))\n    \n        }, this.maximumDuration)\n\n      }\n\n    })\n\n  }\n\n  async send(requestMessage) {\n\n    let responsePromise = this.whenMessageType(requestMessage.type)\n    let sendPromise = super.send(requestMessage)\n\n    let [, responseMessage] = await Promise.all([ sendPromise, responsePromise ])\n\n    if (responseMessage.error) {\n      throw responseMessage.error\n    }\n\n    return responseMessage.returnValue\n\n  }\n\n  async ping() {\n    await this.whenReady()\n    return this.send({ 'type': 'ping' })\n  }\n\n  async apply(methodName, parameter) {\n    await this.whenReady()\n    return this.send({ 'type': 'apply', 'methodName': methodName, 'parameter': parameter })\n  }\n\n  disconnect() {\n    super.disconnect()\n    return this.whenRejected(WorkerClientDisconnectedError)\n  }\n\n  async exit(code = 0) {\n    await this.whenReady()\n    await super.send({ 'type': 'exit', 'code': code }) // there will be no response\n    await this.whenRejected(WorkerClientExitedError)\n  }\n\n  kill(...parameter) {\n    super.kill(...parameter)\n    return this.whenRejected(WorkerClientKilledError)\n  }\n\n}\n\nexport { WorkerClient }"]}