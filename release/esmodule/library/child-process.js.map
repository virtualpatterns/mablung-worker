{"version":3,"sources":["../../../source/esmodule/library/child-process.js"],"names":[],"mappings":"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","file":"child-process.js","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport EventEmitter from 'events'\nimport FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Stream from 'stream'\n\nimport { Null } from './null.js'\n\nimport { ChildProcessSignalError } from './error/child-process-signal-error.js'\n\nclass ChildProcess extends EventEmitter {\n\n  constructor(userPath, userParameter = {}, userOption = {}) { // \n    super()\n\n    let processPath = userPath\n    let processParameter = Configuration.getParameter(this._defaultParameter, userParameter)\n    let processOption = Configuration.getOption(this._defaultOption, userOption)\n\n    let process = this._createProcess(processPath, processParameter, processOption)\n\n    this._processPath = processPath\n    this._processParameter = processParameter\n    this._processOption = processOption\n\n    this._process = process\n\n    this._console = new Null()\n\n    this._stream = null\n    this._streamOption = null\n\n    this._attach()\n\n  }\n\n  /* c8 ignore next 1 */\n  _createProcess(/* path, parameter, option */) {}\n\n  _attach() {\n\n    this._process.on('message', this.__onMessage = (message) => {\n      // this._console.log('ChildProcess.on(\\'message\\', this.__onMessage = (message) => { ... })')\n      // this._console.dir(message)\n  \n      try {\n        this._onMessage(message)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('error', this.__onError = (error) => {\n      this._console.error('ChildProcess.on(\\'error\\', this.__onError = (error) => { ... })')\n      this._console.error(error)\n  \n      try {\n        this._detach()\n        this._onError(error)\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n    this._process.on('disconnect', this.__onDisconnect = () => {\n      this._console.log('ChildProcess.on(\\'disconnect\\', this.__onDisconnect = () => { ... })')\n  \n      try {\n        this._onDisconnect()\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      }\n\n    })\n\n    this._process.on('exit', this.__onExit = (code, signal) => {\n      this._console.log(`ChildProcess.on('exit', this.__onExit = (${code}, ${Is.null(signal) ? signal : `'${signal}'`}) => { ... })`)\n\n      try {\n\n        this._detach()\n\n        if (Is.not.null(code)) {\n          this._onExit(code)\n          /* c8 ignore next 5 */\n        } else if (Is.not.null(signal)) {\n          this._onKill(signal)\n        } else {\n          this._onExit(0)\n        }\n\n      /* c8 ignore next 3 */\n      } catch (error) {\n        this._console.error(error)\n      } finally {\n        this._console = new Null()\n      }\n\n    })\n\n  }\n\n  _detach() {\n\n    if (this.__onExit) {\n      this._process.off('exit', this.__onExit)\n      delete this.__onExit\n    }\n\n    if (this.__onDisconnect) {\n      this._process.off('disconnect', this.__onDisconnect)\n      delete this.__onDisconnect\n    }\n\n    if (this.__onError) {\n      this._process.off('error', this.__onError)\n      delete this.__onError\n    }\n\n    if (this.__onMessage) {\n      this._process.off('message', this.__onMessage)\n      delete this.__onMessage\n    }\n\n  }\n\n  _onMessage(message) {\n    this.emit('message', message)\n  }\n\n  _onError(error) {\n    this.emit('error', error)\n  }\n\n  _onDisconnect() {\n    this.emit('disconnect')\n  }\n\n  _onExit(code) {\n    this.emit('exit', code)\n  }\n\n  _onKill(signal) {\n    this.emit('kill', signal)\n  }\n\n  /* c8 ignore next 3 */\n  get path() {\n    return this._processPath\n  }\n\n  get _defaultParameter() {\n    return {}\n  }\n\n  /* c8 ignore next 3 */\n  get parameter() {\n    return this._processParameter\n  }\n\n  get _defaultOption() {\n    return {\n      'serialization': 'advanced',\n      'stdio': 'pipe'\n    }\n  }\n\n  get option() {\n    return this._processOption\n  }\n\n  get console() {\n    return this._console\n  }\n\n  get pid() {\n    return this._process.pid\n  }\n\n  get isConnected() {\n    return this._process.connected\n  }\n\n  writeTo(path, option = { 'autoClose': true, 'emitClose': true, 'encoding': 'utf8', 'flags': 'a+' }) {\n\n    let stream = null\n\n    switch (true) {\n      /* c8 ignore next 3 */\n      case path instanceof Stream.Writable:\n        stream = path\n        break\n      default:\n        FileSystem.ensureDirSync(Path.dirname(path))\n        stream = FileSystem.createWriteStream(path, option)\n    }\n\n    this._process.stderr.pipe(stream, { 'end': false })\n    this._process.stdout.pipe(stream, { 'end': false })\n\n    this._console = new Console({\n      'colorMode': false,\n      'ignoreErrors': false,\n      'stderr': stream,\n      'stdout': stream\n    })\n\n    this._stream = stream\n    this._streamOption = option\n        \n  }\n\n  send(message) {\n    // this._console.log('ChildProcess.send(message) { ... }')\n    // this._console.dir(message)\n\n    return new Promise((resolve, reject) => {\n      \n      this._process.send(message, (error) => {\n\n        if (Is.null(error)) {\n          resolve()\n        } else {\n          reject(error)\n        }\n\n      })\n\n    })\n\n  }\n\n  disconnect() {\n    this._process.disconnect()\n  }\n\n  signal(signal) {\n\n    if (this._process.kill(signal)) {\n      // do nothing\n    /* c8 ignore next 3 */\n    } else {\n      throw new ChildProcessSignalError(signal, this._process.pid)\n    }\n\n  }\n  \n  kill(signal = 'SIGINT') {\n    this.signal(signal)\n  }\n\n}\n\nexport { ChildProcess }"]}