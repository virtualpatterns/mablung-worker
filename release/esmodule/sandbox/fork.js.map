{"version":3,"sources":["../../../source/esmodule/sandbox/fork.js"],"names":[],"mappings":"yDAAA,OAAO,YAAP,MAAyB,eAAzB;AACA,SAAS,aAAT,QAA8B,QAA9B;;AAEA,MAAM,OAAO,GAAG,OAAhB;AACA,MAAM,OAAO,GAJb,cAAc,CAAC,MAAM,CAAC,IAAP,CAAY,GAAb,CAId;;AAEA,OAAO,CAAC,EAAR,CAAW,MAAX,EAAmB,MAAM;AACvB,EAAA,OAAO,CAAC,GAAR,CAAY,4CAAZ;AACD,CAFD;;AAIA,IAAI,YAAY,GAAG,YAAY,CAAC,IAAb,CAAkB,OAAO,CAAC,OAAR,CAAgB,aAAhB,CAAlB,EAAkD;AACnE;AACA,mBAAiB,UAFkD;AAGnE,WAAS,SAH0D,EAAlD,CAAnB;;;AAMA;AACA;AACA;AACA;AACA;;AAEA,YAAY,CAAC,EAAb,CAAgB,SAAhB,EAA2B,YAAY,CAAC,UAAb,GAA0B,CAAC,OAAD,KAAa;AAChE,EAAA,OAAO,CAAC,GAAR,CAAY,qFAAZ;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,EAAA,YAAY,CAAC,IAAb,CAAkB,EAAE,QAAQ,KAAV,EAAlB,EAAqC,CAAC,KAAD,KAAW;AAC9C,QAAI,KAAJ,EAAW;AACT,MAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACD,KAFD,MAEO;AACL,MAAA,UAAU,CAAC,OAAO,CAAC,IAAT,EAAe,IAAf,CAAV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAbD;AAcD,CAjBD;;AAmBA,YAAY,CAAC,EAAb,CAAgB,MAAhB,EAAwB,YAAY,CAAC,OAAb,GAAuB,MAAM;AACnD,EAAA,OAAO,CAAC,GAAR,CAAY,wEAAZ;AACD,CAFD","file":"fork.js","sourcesContent":["import ChildProcess from 'child_process'\nimport { createRequire } from 'module'\n\nconst Process = process\nconst Require = __require\n\nProcess.on('exit', () => {\n  console.log('PARENT Process.on(\\'exit\\', () => { ... })')\n})\n\nlet childProcess = ChildProcess.fork(Require.resolve('./forked.js'), {\n  // 'execArgv': [ '--inspect' ],\n  'serialization': 'advanced',\n  'stdio': 'inherit'\n})\n\n// setTimeout(() => {\n//   console.log('PARENT ChildProcess.send({ \\'type\\': \\'ping\\' })')\n//   childProcess.send({ 'type': 'ping' })\n//   childProcess.off('message', childProcess._onMessage)\n// }, 5000)\n\nchildProcess.on('message', childProcess._onMessage = (message) => {\n  console.log('PARENT ChildProcess.on(\\'message\\', childProcess._onMessage = (message) => { ... })')\n  console.dir(message)\n  childProcess.send({ 'type': 'end' }, (error) => {\n    if (error) {\n      console.error(error)\n    } else {\n      setTimeout(Process.exit, 5000)\n      // childProcess.send({ 'type': 'end' }, (error) => {\n      //   if (error) {\n      //     console.error(error)\n      //   } else {\n      //     Process.exit()\n      //   }\n      // })\n    }\n  })\n})\n\nchildProcess.on('exit', childProcess._onExit = () => {\n  console.log('PARENT ChildProcess.on(\\'exit\\', childProcess._onExit = () => { ... })')\n})\n"]}