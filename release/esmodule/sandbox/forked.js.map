{"version":3,"sources":["../../../source/esmodule/sandbox/forked.js"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,wCAA9B;AACA,SAAS,OAAT,QAAwB,SAAxB;AACA,OAAO,UAAP,MAAuB,IAAvB;;AAEA,MAAM,OAAO,GAAG,OAAhB;;AAEA,IAAI,YAAY,GAAG,IAAnB;AACA,YAAY,GAAG,UAAU,CAAC,iBAAX,CAA6B,cAA7B,EAA6C,EAAE,YAAY,MAAd,EAA7C,CAAf;;AAEA,IAAI,WAAW,GAAG,IAAlB;AACA,WAAW,GAAG,UAAU,CAAC,iBAAX,CAA6B,cAA7B,EAA6C,EAAE,YAAY,MAAd,EAA7C,CAAd;;AAEA,IAAI,QAAQ,GAAG,IAAI,OAAJ,CAAY;AACzB,eAAa,KADY;AAEzB,kBAAgB,KAFS;AAGzB,YAAU,WAHe;AAIzB,YAAU,YAJe,EAAZ,CAAf;;;AAOA,OAAO,CAAC,EAAR,CAAW,mBAAX,EAAgC,CAAC,KAAD,KAAW;AACzC,EAAA,QAAQ,CAAC,KAAT,CAAe,6DAAf;AACA,EAAA,QAAQ,CAAC,KAAT,CAAe,KAAf;AACD,CAHD;;AAKA,OAAO,CAAC,EAAR,CAAW,MAAX,EAAmB,MAAM;AACvB,EAAA,QAAQ,CAAC,GAAT,CAAa,2CAAb;AACA,EAAA,QAAQ,CAAC,KAAT,CAAe,2CAAf;;AAEA,EAAA,YAAY,CAAC,KAAb;AACA,EAAA,WAAW,CAAC,KAAZ;;AAED,CAPD;;AASA,QAAQ,CAAC,GAAT,CAAa,MAAb;AACA,QAAQ,CAAC,GAAT,CAAa,OAAO,CAAC,IAArB;AACA,QAAQ,CAAC,KAAT,CAAe,MAAf;;AAEA,IAAI,UAAU,GAAG,IAAjB;;AAEA,OAAO,CAAC,EAAR,CAAW,SAAX,EAAsB,UAAU,GAAG,CAAC,OAAD,KAAa;AAC9C,EAAA,QAAQ,CAAC,GAAT,CAAa,kEAAb;AACA,EAAA,QAAQ,CAAC,GAAT,CAAa,OAAb;;AAEA,EAAA,OAAO,CAAC,GAAR,CAAY,SAAZ,EAAuB,UAAvB;AACA,EAAA,UAAU,GAAG,IAAb;;AAEA,EAAA,UAAU,CAAC,MAAM;AACf,IAAA,OAAO,CAAC,IAAR;AACD,GAFS,EAEP,IAFO,CAAV;;AAID,CAXD","file":"forked.js","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport FileSystem from 'fs'\n\nconst Process = process\n\nlet outputStream = null\noutputStream = FileSystem.createWriteStream('./forked.out', { 'encoding': 'utf8' })\n\nlet errorStream = null\nerrorStream = FileSystem.createWriteStream('./forked.err', { 'encoding': 'utf8' })\n\nlet _console = new Console({\n  'colorMode': false,\n  'ignoreErrors': false,\n  'stderr': errorStream,\n  'stdout': outputStream\n})\n\nProcess.on('uncaughtException', (error) => {\n  _console.error('CHILD Process.on(\\'uncaughtException\\', (error) => { ... })')\n  _console.error(error)\n})\n\nProcess.on('exit', () => {\n  _console.log('CHILD Process.on(\\'exit\\', () => { ... })')\n  _console.error('CHILD Process.on(\\'exit\\', () => { ... })')\n\n  outputStream.close()\n  errorStream.close()\n \n})\n\n_console.log('HELO')\n_console.dir(Process.argv)\n_console.error('HELO')\n\nlet _onMessage = null\n\nProcess.on('message', _onMessage = (message) => {\n  _console.log('CHILD Process.on(\\'message\\', _onMessage = (message) => { ... })')\n  _console.dir(message)\n\n  Process.off('message', _onMessage)\n  _onMessage = null\n\n  setTimeout(() => {\n    Process.exit()\n  }, 2500)\n\n})\n"]}