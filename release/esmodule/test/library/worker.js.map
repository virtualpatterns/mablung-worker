{"version":3,"sources":["../../../../source/esmodule/test/library/worker.js"],"names":[],"mappings":"AAAA,SAAS,oBAAT,QAAqC,mCAArC;AACA,SAAS,4BAAT,QAA6C,4CAA7C;AACA,SAAS,6BAAT,QAA8C,6CAA9C;;AAEA,MAAM,OAAO,GAAG,OAAhB;;AAEA,OAAO,SAAS,MAAT,CAAgB,QAAQ,GAAG,CAA3B,EAA8B;;AAEnC,MAAI,QAAQ,GAAG,CAAf,EAAkB;;AAEhB,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,KAAa;;AAE9B,MAAA,UAAU,CAAC,MAAM;AACf;AACA,QAAA,OAAO,CAAC,OAAO,CAAC,GAAT,CAAP;AACD,OAHS,EAGP,QAHO,CAAV;;AAKD,KAPM,CAAP;;AASD,GAXD,MAWO;AACL,WAAO,OAAO,CAAC,GAAf;AACD;;AAEF;;AAED,OAAO,SAAS,cAAT,CAAwB,QAAQ,GAAG,CAAnC,EAAsC;;AAE3C,MAAI,QAAQ,GAAG,CAAf,EAAkB;;AAEhB,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;;AAEtC,MAAA,UAAU,CAAC,MAAM;AACf;AACA,QAAA,MAAM,CAAC,IAAI,oBAAJ,EAAD,CAAN;AACD,OAHS,EAGP,QAHO,CAAV;;AAKD,KAPM,CAAP;;AASD,GAXD,MAWO;AACL,UAAM,IAAI,oBAAJ,EAAN;AACD;;AAEF;;AAED,OAAO,SAAS,sBAAT,GAAkC;AACvC,EAAA,YAAY,CAAC,MAAM,CAAE,MAAM,IAAI,4BAAJ,EAAN,CAA0C,CAAnD,CAAZ;AACD;;AAED,OAAO,SAAS,wBAAT,GAAoC;AACzC,EAAA,YAAY,CAAC,MAAM,OAAO,CAAC,MAAR,CAAe,IAAI,6BAAJ,EAAf,CAAP,CAAZ;AACD","file":"worker.js","sourcesContent":["import { WorkerExceptionError } from './error/worker-exception-error.js'\nimport { WorkerUncaughtExceptionError } from './error/worker-uncaught-exception-error.js'\nimport { WorkerUnhandledRejectionError } from './error/worker-unhandled-rejection-error.js'\n\nconst Process = process\n\nexport function getPid(duration = 0) {\n\n  if (duration > 0) {\n\n    return new Promise((resolve) => {\n\n      setTimeout(() => {\n        /* c8 ignore next 1 */\n        resolve(Process.pid)\n      }, duration)\n\n    })\n\n  } else {\n    return Process.pid\n  }\n\n}\n\nexport function throwException(duration = 0) {\n\n  if (duration > 0) {\n\n    return new Promise((resolve, reject) => {\n\n      setTimeout(() => {\n        /* c8 ignore next 1 */\n        reject(new WorkerExceptionError())\n      }, duration)\n\n    })\n\n  } else {\n    throw new WorkerExceptionError()\n  }\n\n}\n\nexport function throwUncaughtException() {\n  setImmediate(() => { throw new WorkerUncaughtExceptionError() })\n}\n\nexport function rejectUnhandledException() {\n  setImmediate(() => Promise.reject(new WorkerUnhandledRejectionError()))\n}\n"]}