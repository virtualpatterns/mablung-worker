{"version":3,"sources":["../../../../source/esmodule/test/library/error-client.test.js"],"names":[],"mappings":"AAAA,SAAS,EAAT,QAAmB,6BAAnB;AACA,OAAO,IAAP,MAAiB,KAAjB;;AAEA,SAAS,WAAT,QAA4B,mBAA5B;;AAEA,SAAS,yBAAT,QAA0C,gBAA1C;;AAEA,IAAI,CAAC,mBAAD,EAAsB,OAAO,IAAP,KAAgB;;AAExC,MAAI,EAAE,CAAC,OAAH,EAAJ,EAAkB;AAChB,IAAA,IAAI,CAAC,MAAL,CAAY,MAAM,IAAI,WAAJ,EAAlB,EAAqC,EAAE,QAAQ,SAAV,EAArC;AACD,GAFD,MAEO;;AAEL,QAAI,MAAM,GAAG,IAAI,WAAJ,EAAb;AACA,QAAI,KAAK,GAAG,MAAM,MAAM,CAAC,YAAP,CAAoB,yBAApB,CAAlB;;AAEA,IAAA,IAAI,CAAC,EAAL,CAAQ,KAAK,CAAC,aAAN,CAAoB,IAA5B,EAAkC,QAAlC;;AAED;;AAEF,CAbG,CAAJ","file":"error-client.test.js","sourcesContent":["import { Is } from '@virtualpatterns/mablung-is'\nimport Test from 'ava'\n\nimport { ErrorClient } from './error-client.js'\n\nimport { WorkerClientInternalError } from '../../index.js'\n\nTest('new ErrorClient()', async (test) => {\n\n  if (Is.windows()) {\n    test.throws(() => new ErrorClient(), { 'code': 'UNKNOWN'})\n  } else {\n\n    let worker = new ErrorClient()\n    let error = await worker.whenRejected(WorkerClientInternalError)\n  \n    test.is(error.internalError.code, 'EACCES')\n\n  }\n\n})\n"]}