{"version":3,"sources":["../../../../source/esmodule/library/worker-pool/random-worker-pool.js"],"names":[],"mappings":";;;;;;;AAAA;;AAEA;;AAEA,MAAM,gBAAN,SAA+B,sBAA/B,CAA0C;AAExC,EAAA,WAAW,CAAC,GAAG,SAAJ,EAAe;AACxB,UAAM,GAAG,SAAT;AACD;;AAEmB,QAAd,cAAc,GAAG;AAErB,QAAI,OAAO,GAAG,IAAd;;AAEA,WAAO,cAAG,IAAH,CAAQ,OAAR,KAAoB,CAAC,OAAO,CAAC,WAApC,EAAiD;AAC/C,MAAA,OAAO,GAAG,KAAK,WAAL,CAAiB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,KAAK,eAAL,GAAuB,CAAxC,CAAX,CAAjB,CAAV;AACD;;AAED,WAAO,OAAP;AAED;;AAhBuC","file":"random-worker-pool.cjs","sourcesContent":["import { Is } from '@virtualpatterns/mablung-is'\n\nimport { WorkerPool } from '../worker-pool.js'\n\nclass RandomWorkerPool extends WorkerPool {\n\n  constructor(...parameter) {\n    super(...parameter)\n  }\n\n  async _selectProcess() {\n\n    let process = null\n\n    while (Is.null(process) || !process.isConnected) {\n      process = this._getProcess(Math.round(Math.random() * (this.numberOfProcess - 1)))\n    }\n\n    return process\n\n  }\n\n}\n\nexport { RandomWorkerPool }\n\n"]}