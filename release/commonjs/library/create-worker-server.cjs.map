{"version":3,"sources":["../../../source/esmodule/library/create-worker-server.js"],"names":[],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA;AACA;AACA;AAEA,MAAM,OAAO,GAAG,OAAhB;AACA,MAAM,OAAO,GATb,OASA;;AAEA,MAAM,OAAO,GAAG,cAAM,KAAN,CAAY,YAAW,YAAX,CAAwB,OAAO,CAAC,OAAR,CAAgB,uBAAhB,CAAxB,EAAkE;AAAE,cAAY;AAAd,CAAlE,CAAZ,CAAhB;;AAEC,CAAC,YAAY;AAEZ;AAEA,qBAAQ,OAAR,CAAgB,OAAO,CAAC,OAAxB;;AACA,qBAAQ,MAAR,CAAe,mCAAf,EAAoD,2CAApD,EAAiG,OAAO,CAAC,OAAR,CAAgB,qBAAhB,CAAjG;;AACA,qBAAQ,MAAR,CAAe,sBAAf,EAAuC,8BAAvC,EAAuE,OAAO,CAAC,OAAR,CAAgB,cAAhB,CAAvE;;AAEA,qBAAQ,KAAR,CAAc,OAAO,CAAC,IAAtB,EARY,CAUZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI,iBAAiB,GAAG,IAAxB;AACA,EAAA,iBAAiB,GAAG,yBAAa,mBAAQ,IAAR,GAAe,qBAA5B,kDAApB,CApBY,CAoB2D;;AACvE,EAAA,iBAAiB,GAAG,iBAAiB,CAAC,OAAlB,IAA6B,iBAAjD,CArBY,CAuBZ;AACA;;AAEA,QAAO,IAAI,iBAAJ,EAAD,CAA0B,MAA1B,CAAiC,mBAAQ,IAAR,GAAe,UAAhD,CAAN;AAED,CA5BA","file":"create-worker-server.cjs","sourcesContent":["import '@virtualpatterns/mablung-source-map-support/install'\nimport Command from 'commander'\nimport FileSystem from 'fs'\nimport JSON5 from 'json5'\n// import Path from 'path'\n// import URL from 'url'\n// import Utilities from 'util'\n\nconst Process = process\nconst Require = __require\n\nconst Package = JSON5.parse(FileSystem.readFileSync(Require.resolve('../../../package.json'), { 'encoding': 'utf-8' }))\n\n;(async () => {\n\n  // console.log(Require.resolve('./worker-server.js'))\n\n  Command.version(Package.version)\n  Command.option('--worker-server-class-path <path>', 'Path to the server class to import/create', Require.resolve('./worker-server.js'))\n  Command.option('--import-path <path>', 'Path to the module to import', Require.resolve('./worker.js'))\n\n  Command.parse(Process.argv)\n\n  // console.log('-'.repeat(80))\n  // console.log(`Process.version               = '${Process.version}'`)\n  // console.log(`Package.version               = 'v${Package.version}'`)\n  // console.log(`Process.argv[0]               = '${Process.argv[0]}'`)\n  // console.log(`Process.execArgv              = ${Utilities.inspect(Process.execArgv)}`)\n  // console.log(`Process.argv[1]               = '${Path.relative(Process.cwd(), Process.argv[1])}'`)\n  // console.log(`Command.opts().workerServerClassPath = '${Path.relative(Process.cwd(), Command.opts().workerServerClassPath)}'`)\n  // console.log(`Command.opts().importPath            = '${Path.relative(Process.cwd(), Command.opts().importPath)}'`)\n\n  let workerServerClass = null\n  workerServerClass = await import(Command.opts().workerServerClassPath) // URL.pathToFileURL(Command.opts().workerServerClassPath))\n  workerServerClass = workerServerClass.default || workerServerClass\n\n  // console.log(`workerServerClass.name        = ${workerServerClass.name}`)\n  // console.log('-'.repeat(80))\n\n  await (new workerServerClass()).import(Command.opts().importPath)\n\n})()\n"]}