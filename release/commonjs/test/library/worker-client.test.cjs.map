{"version":3,"sources":["../../../../source/esmodule/test/library/worker-client.test.js"],"names":[],"mappings":"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","file":"worker-client.test.cjs","sourcesContent":["import Test from 'ava'\n\nimport { LoggedClient } from './logged-client.js'\nimport { WorkerClient } from '../../index.js'\n\nimport { WorkerClientDurationExceededError } from '../../index.js'\nimport { WorkerClientRejectedError } from '../../library/error/worker-client-rejected-error.js'\n\nconst Require = __require\n\nTest('new WorkerClient()', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new LoggedClient()})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('./worker.js'), { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient({ '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('../../library/create-worker-server.js'), { '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('WorkerClient.module.getPid()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n  \n})\n\nTest('WorkerClient._onPing(message)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    await test.notThrowsAsync(worker.ping())\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onApply(message)', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onTerminate(signal)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await test.notThrowsAsync(worker.ping()) // establishes is ready\n  await worker.kill()\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest('WorkerClient.maximumDuration', async (test) => {\n\n  let maximumDuration = 10000\n  let worker = new WorkerClient({ 'maximumDuration': maximumDuration })\n\n  try {\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n    worker.maximumDuration = maximumDuration = 5000\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.module.getPid(duration) throws WorkerClientRejectedError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  await test.throwsAsync(Promise.all([ worker.module.getPid(2500), worker.exit() ]), { 'instanceOf': WorkerClientRejectedError })\n\n})\n\nTest('WorkerClient.ping() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    let maximumDuration = null\n    maximumDuration = worker.maximumDuration\n\n    worker.maximumDuration = 1    \n    await test.throwsAsync(worker.ping(), { 'instanceOf': WorkerClientDurationExceededError })\n    worker.maximumDuration = maximumDuration    \n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.exit() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n\n  let maximumDuration = null\n  maximumDuration = worker.maximumDuration\n\n  worker.maximumDuration = 1    \n  await test.throwsAsync(worker.exit(), { 'instanceOf': WorkerClientDurationExceededError })\n  worker.maximumDuration = maximumDuration    \n\n})\n\nTest('WorkerClient.module.throwException(duration) throws WorkerExceptionError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    await test.throwsAsync(worker.module.throwException(), { 'message': 'WorkerExceptionError' })\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.disconnect()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n  await test.notThrowsAsync(worker.disconnect())\n\n})\n\nTest('WorkerClient.module.then', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.falsy(worker.module.then)\n  } finally {\n    await worker.exit()\n  }\n\n})\n"]}