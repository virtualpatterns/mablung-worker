{"version":3,"sources":["../../../../../source/esmodule/test/library/worker-pool/random-worker-pool.test.js"],"names":[],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEA,MAAM,OAAO,GALb,OAKA;AAEA,kBAAK,wDAAL,EAA+D,MAAO,IAAP,IAAgB;AAE7E,QAAM,OAAO,GAAG,eAAM,aAAN,EAAhB;;AAEA,MAAI;AAEF,QAAI,IAAI,GAAG,IAAI,uBAAJ,CAAqB,OAAO,CAAC,OAAR,CAAgB,eAAhB,CAArB,CAAX;;AAEA,QAAI;AAEF,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,gBAAlB;AAEA,YAAM,IAAI,CAAC,MAAL,CAAY,MAAZ,EAAN;AAEA,MAAA,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,cAAL,CAAoB,UAA9B;AACA,MAAA,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,cAAL,CAAoB,UAApB,CAA+B,QAA/B,EAAyC,EAAzC,CAAV;AAED,KATD,SASU;AACR,YAAM,IAAI,CAAC,IAAL,EAAN;AACD;AAEF,GAjBD,SAiBU;AACR,IAAA,OAAO,CAAC,OAAR;AACD;AAEF,CAzBD","file":"random-worker-pool.test.cjs","sourcesContent":["import Sinon from 'sinon'\nimport Test from 'ava'\n\nimport { RandomWorkerPool } from '../../../index.js'\n\nconst Require = __require\n\nTest('RandomWorkerPool._selectProcess(methodName, parameter)', async (test) => {\n\n  const sandbox = Sinon.createSandbox()\n\n  try {\n\n    let pool = new RandomWorkerPool(Require.resolve('../worker.js'))\n\n    try {\n\n      sandbox.spy(pool, '_selectProcess')\n\n      await pool.module.getPid()\n\n      test.true(pool._selectProcess.calledOnce)\n      test.true(pool._selectProcess.calledWith('getPid', []))\n\n    } finally {\n      await pool.exit()\n    }\n  \n  } finally {\n    sandbox.restore()\n  }\n\n})\n\n"]}