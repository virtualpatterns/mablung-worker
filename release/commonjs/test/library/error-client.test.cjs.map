{"version":3,"sources":["../../../../source/esmodule/test/library/error-client.test.js"],"names":[],"mappings":";;AAAA;;AACA;;AAEA;;AAEA;;;;AAEA,kBAAK,mBAAL,EAA0B,MAAO,IAAP,IAAgB;AAExC,MAAI,cAAG,OAAH,EAAJ,EAAkB;AAChB,IAAA,IAAI,CAAC,MAAL,CAAY,MAAM,IAAI,wBAAJ,EAAlB,EAAqC;AAAE,cAAQ;AAAV,KAArC;AACD,GAFD,MAEO;AAEL,QAAI,MAAM,GAAG,IAAI,wBAAJ,EAAb;AACA,QAAI,KAAK,GAAG,MAAM,MAAM,CAAC,YAAP,CAAoB,gCAApB,CAAlB;AAEA,IAAA,IAAI,CAAC,EAAL,CAAQ,KAAK,CAAC,aAAN,CAAoB,IAA5B,EAAkC,QAAlC;AAED;AAEF,CAbD","file":"error-client.test.cjs","sourcesContent":["import { Is } from '@virtualpatterns/mablung-is'\nimport Test from 'ava'\n\nimport { ErrorClient } from './error-client.js'\n\nimport { WorkerClientInternalError } from '../../index.js'\n\nTest('new ErrorClient()', async (test) => {\n\n  if (Is.windows()) {\n    test.throws(() => new ErrorClient(), { 'code': 'UNKNOWN'})\n  } else {\n\n    let worker = new ErrorClient()\n    let error = await worker.whenRejected(WorkerClientInternalError)\n  \n    test.is(error.internalError.code, 'EACCES')\n\n  }\n\n})\n"]}