{"version":3,"sources":["../../../source/test/library/worker-client.test.js"],"names":["Test","LoggedClient","WorkerClient","WorkerClientDurationExceededError","WorkerClientRejectedError","Require","_createRequire","import","meta","url","test","worker","notThrows","notThrowsAsync","exit","resolve","is","module","getPid","pid","ping","kill","throwsAsync","maximumDuration","option","Promise","all","throwException","disconnect","falsy","then"],"mappings":"yDAAA,OAAOA,IAAP,MAAiB,KAAjB;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,iCAAT,QAAkD,gBAAlD;AACA,SAASC,yBAAT,QAA0C,qDAA1C;;AAEA,MAAMC,OAAO,GARbC,cAAc,CAACC,MAAM,CAACC,IAAP,CAAYC,GAAb,CAQd;;AAEAT,IAAI,CAAC,oBAAD,EAAuB,MAAOU,IAAP,IAAgB;;AAEzC,MAAIC,MAAM,GAAG,IAAb;;AAEAD,EAAAA,IAAI,CAACE,SAAL,CAAe,MAAM,CAAED,MAAM,GAAG,IAAIV,YAAJ,EAAT,CAA4B,CAAnD;AACA,QAAMS,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACG,IAAP,EAApB,CAAN;;AAED,CAPG,CAAJ;;AASAd,IAAI,CAAC,gCAAD,EAAmC,MAAOU,IAAP,IAAgB;;AAErD,MAAIC,MAAM,GAAG,IAAb;;AAEAD,EAAAA,IAAI,CAACE,SAAL,CAAe,MAAM,CAAED,MAAM,GAAG,IAAIT,YAAJ,CAAiBG,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAjB,EAAiD,EAAE,mBAAmB,KAArB,EAAjD,CAAT,CAAwF,CAA/G;AACA,QAAML,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACG,IAAP,EAApB,CAAN;;AAED,CAPG,CAAJ;;AASAd,IAAI,CAAC,kCAAD,EAAqC,MAAOU,IAAP,IAAgB;;AAEvD,MAAIC,MAAM,GAAG,IAAb;;AAEAD,EAAAA,IAAI,CAACE,SAAL,CAAe,MAAM,CAAED,MAAM,GAAG,IAAIT,YAAJ,CAAiB,EAAE,iBAAiBG,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAnB,EAAjB,EAAsE,EAAE,mBAAmB,KAArB,EAAtE,CAAT,CAA6G,CAApI;AACA,QAAML,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACG,IAAP,EAApB,CAAN;;AAED,CAPG,CAAJ;;AASAd,IAAI,CAAC,wCAAD,EAA2C,MAAOU,IAAP,IAAgB;;AAE7D,MAAIC,MAAM,GAAG,IAAb;;AAEAD,EAAAA,IAAI,CAACE,SAAL,CAAe,MAAM,CAAED,MAAM,GAAG,IAAIT,YAAJ,CAAiBG,OAAO,CAACU,OAAR,CAAgB,uCAAhB,CAAjB,EAA2E,EAAE,iBAAiBV,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAnB,EAA3E,EAAgI,EAAE,mBAAmB,KAArB,EAAhI,CAAT,CAAuK,CAA9L;AACA,QAAML,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACG,IAAP,EAApB,CAAN;;AAED,CAPG,CAAJ;;AASAd,IAAI,CAAC,8BAAD,EAAiC,MAAOU,IAAP,IAAgB;;AAEnD,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,MAAI;AACFQ,IAAAA,IAAI,CAACM,EAAL,CAAQ,MAAML,MAAM,CAACM,MAAP,CAAcC,MAAd,EAAd,EAAsCP,MAAM,CAACQ,GAA7C;AACD,GAFD,SAEU;AACR,UAAMR,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAVG,CAAJ;;AAYAd,IAAI,CAAC,+BAAD,EAAkC,MAAOU,IAAP,IAAgB;;AAEpD,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,MAAI;AACF,UAAMQ,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACS,IAAP,EAApB,CAAN;AACD,GAFD,SAEU;AACR,UAAMT,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAVG,CAAJ;;AAYAd,IAAI,CAAC,gCAAD,EAAmC,MAAOU,IAAP,IAAgB;;AAErD,MAAIC,MAAM,GAAG,IAAIT,YAAJ,CAAiBG,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAjB,CAAb;;AAEA,MAAI;AACFL,IAAAA,IAAI,CAACM,EAAL,CAAQ,MAAML,MAAM,CAACM,MAAP,CAAcC,MAAd,EAAd,EAAsCP,MAAM,CAACQ,GAA7C;AACD,GAFD,SAEU;AACR,UAAMR,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAVG,CAAJ;;AAYAd,IAAI,CAAC,mCAAD,EAAsC,MAAOU,IAAP,IAAgB;;AAExD,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,QAAMQ,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACS,IAAP,EAApB,CAAN,CAJwD,CAIf;AACzC,QAAMT,MAAM,CAACU,IAAP,EAAN;AACA,QAAMX,IAAI,CAACY,WAAL,CAAiBX,MAAM,CAACS,IAAP,EAAjB,EAAgC,EAAE,QAAQ,wBAAV,EAAhC,CAAN;;AAED,CARG,CAAJ;;AAUApB,IAAI,CAAC,8BAAD,EAAiC,MAAOU,IAAP,IAAgB;;AAEnD,MAAIa,eAAe,GAAG,KAAtB;AACA,MAAIZ,MAAM,GAAG,IAAIT,YAAJ,CAAiB,EAAE,mBAAmBqB,eAArB,EAAjB,CAAb;;AAEA,MAAI;;AAEFb,IAAAA,IAAI,CAACM,EAAL,CAAQL,MAAM,CAACY,eAAf,EAAgCA,eAAhC;AACAb,IAAAA,IAAI,CAACM,EAAL,CAAQL,MAAM,CAACa,MAAP,CAAcD,eAAtB,EAAuCA,eAAvC;;AAEAZ,IAAAA,MAAM,CAACY,eAAP,GAAyBA,eAAe,GAAG,IAA3C;;AAEAb,IAAAA,IAAI,CAACM,EAAL,CAAQL,MAAM,CAACY,eAAf,EAAgCA,eAAhC;AACAb,IAAAA,IAAI,CAACM,EAAL,CAAQL,MAAM,CAACa,MAAP,CAAcD,eAAtB,EAAuCA,eAAvC;;AAED,GAVD,SAUU;AACR,UAAMZ,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAnBG,CAAJ;;AAqBAd,IAAI,CAAC,uEAAD,EAA0E,MAAOU,IAAP,IAAgB;;AAE5F,MAAIC,MAAM,GAAG,IAAIT,YAAJ,CAAiBG,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAjB,CAAb;;AAEA,QAAML,IAAI,CAACY,WAAL,CAAiBG,OAAO,CAACC,GAAR,CAAY,CAAEf,MAAM,CAACM,MAAP,CAAcC,MAAd,CAAqB,IAArB,CAAF,EAA8BP,MAAM,CAACG,IAAP,EAA9B,CAAZ,CAAjB,EAA6E,EAAE,cAAcV,yBAAhB,EAA7E,CAAN;;AAED,CANG,CAAJ;;AAQAJ,IAAI,CAAC,8DAAD,EAAiE,MAAOU,IAAP,IAAgB;;AAEnF,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,MAAI;;AAEF,QAAIqB,eAAe,GAAG,IAAtB;AACAA,IAAAA,eAAe,GAAGZ,MAAM,CAACY,eAAzB;;AAEAZ,IAAAA,MAAM,CAACY,eAAP,GAAyB,CAAzB;AACA,UAAMb,IAAI,CAACY,WAAL,CAAiBX,MAAM,CAACS,IAAP,EAAjB,EAAgC,EAAE,cAAcjB,iCAAhB,EAAhC,CAAN;AACAQ,IAAAA,MAAM,CAACY,eAAP,GAAyBA,eAAzB;;AAED,GATD,SASU;AACR,UAAMZ,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAjBG,CAAJ;;AAmBAd,IAAI,CAAC,8DAAD,EAAiE,MAAOU,IAAP,IAAgB;;AAEnF,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,QAAMS,MAAM,CAACS,IAAP,EAAN,CAJmF,CAI/D;;AAEpB,MAAIG,eAAe,GAAG,IAAtB;AACAA,EAAAA,eAAe,GAAGZ,MAAM,CAACY,eAAzB;;AAEAZ,EAAAA,MAAM,CAACY,eAAP,GAAyB,CAAzB;AACA,QAAMb,IAAI,CAACY,WAAL,CAAiBX,MAAM,CAACG,IAAP,EAAjB,EAAgC,EAAE,cAAcX,iCAAhB,EAAhC,CAAN;AACAQ,EAAAA,MAAM,CAACY,eAAP,GAAyBA,eAAzB;;AAED,CAbG,CAAJ;;AAeAvB,IAAI,CAAC,0EAAD,EAA6E,MAAOU,IAAP,IAAgB;;AAE/F,MAAIC,MAAM,GAAG,IAAIT,YAAJ,CAAiBG,OAAO,CAACU,OAAR,CAAgB,aAAhB,CAAjB,CAAb;;AAEA,MAAI;AACF,UAAML,IAAI,CAACY,WAAL,CAAiBX,MAAM,CAACM,MAAP,CAAcU,cAAd,EAAjB,EAAiD,EAAE,WAAW,sBAAb,EAAjD,CAAN;AACD,GAFD,SAEU;AACR,UAAMhB,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAVG,CAAJ;;AAYAd,IAAI,CAAC,2BAAD,EAA8B,MAAOU,IAAP,IAAgB;;AAEhD,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,QAAMS,MAAM,CAACS,IAAP,EAAN,CAJgD,CAI5B;AACpB,QAAMV,IAAI,CAACG,cAAL,CAAoBF,MAAM,CAACiB,UAAP,EAApB,CAAN;;AAED,CAPG,CAAJ;;AASA5B,IAAI,CAAC,0BAAD,EAA6B,MAAOU,IAAP,IAAgB;;AAE/C,MAAIC,MAAM,GAAG,IAAIT,YAAJ,EAAb;;AAEA,MAAI;AACFQ,IAAAA,IAAI,CAACmB,KAAL,CAAWlB,MAAM,CAACM,MAAP,CAAca,IAAzB;AACD,GAFD,SAEU;AACR,UAAMnB,MAAM,CAACG,IAAP,EAAN;AACD;;AAEF,CAVG,CAAJ","sourcesContent":["import Test from 'ava'\n\nimport { LoggedClient } from './logged-client.js'\nimport { WorkerClient } from '../../index.js'\n\nimport { WorkerClientDurationExceededError } from '../../index.js'\nimport { WorkerClientRejectedError } from '../../library/error/worker-client-rejected-error.js'\n\nconst Require = __require\n\nTest('new WorkerClient()', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new LoggedClient()})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('./worker.js'), { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient({ '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('../../library/create-worker-server.js'), { '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('WorkerClient.module.getPid()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n  \n})\n\nTest('WorkerClient._onPing(message)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    await test.notThrowsAsync(worker.ping())\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onApply(message)', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onTerminate(signal)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await test.notThrowsAsync(worker.ping()) // establishes is ready\n  await worker.kill()\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest('WorkerClient.maximumDuration', async (test) => {\n\n  let maximumDuration = 10000\n  let worker = new WorkerClient({ 'maximumDuration': maximumDuration })\n\n  try {\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n    worker.maximumDuration = maximumDuration = 5000\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.module.getPid(duration) throws WorkerClientRejectedError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  await test.throwsAsync(Promise.all([ worker.module.getPid(2500), worker.exit() ]), { 'instanceOf': WorkerClientRejectedError })\n\n})\n\nTest('WorkerClient.ping() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    let maximumDuration = null\n    maximumDuration = worker.maximumDuration\n\n    worker.maximumDuration = 1    \n    await test.throwsAsync(worker.ping(), { 'instanceOf': WorkerClientDurationExceededError })\n    worker.maximumDuration = maximumDuration    \n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.exit() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n\n  let maximumDuration = null\n  maximumDuration = worker.maximumDuration\n\n  worker.maximumDuration = 1    \n  await test.throwsAsync(worker.exit(), { 'instanceOf': WorkerClientDurationExceededError })\n  worker.maximumDuration = maximumDuration    \n\n})\n\nTest('WorkerClient.module.throwException(duration) throws WorkerExceptionError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    await test.throwsAsync(worker.module.throwException(), { 'message': 'WorkerExceptionError' })\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.disconnect()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n  await test.notThrowsAsync(worker.disconnect())\n\n})\n\nTest('WorkerClient.module.then', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.falsy(worker.module.then)\n  } finally {\n    await worker.exit()\n  }\n\n})\n"],"file":"worker-client.test.js"}