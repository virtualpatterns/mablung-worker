{"version":3,"sources":["../../../source/test/library/worker-client.test.js"],"names":["Require","require","test","worker","notThrows","LoggedClient","notThrowsAsync","exit","WorkerClient","resolve","is","module","getPid","pid","ping","kill","throwsAsync","maximumDuration","option","Promise","all","WorkerClientRejectedError","WorkerClientDurationExceededError","throwException","disconnect","falsy","then"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { LoggedClient } from './logged-client.js'\nimport { WorkerClient } from '../../index.js'\n\nimport { WorkerClientDurationExceededError } from '../../index.js'\nimport { WorkerClientRejectedError } from '../../library/error/worker-client-rejected-error.js'\n\nconst Require = __require\n\nTest('new WorkerClient()', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new LoggedClient()})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('./worker.js'), { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient({ '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('new WorkerClient(path, option, option)', async (test) => {\n\n  let worker = null\n  \n  test.notThrows(() => { worker = new WorkerClient(Require.resolve('../../library/create-worker-server.js'), { '--import-path': Require.resolve('./worker.js') }, { 'maximumDuration': 10000 })})\n  await test.notThrowsAsync(worker.exit())\n\n})\n\nTest('WorkerClient.module.getPid()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n  \n})\n\nTest('WorkerClient._onPing(message)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    await test.notThrowsAsync(worker.ping())\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onApply(message)', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    test.is(await worker.module.getPid(), worker.pid)\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient._onTerminate(signal)', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await test.notThrowsAsync(worker.ping()) // establishes is ready\n  await worker.kill()\n  await test.throwsAsync(worker.ping(), { 'code': 'ERR_IPC_CHANNEL_CLOSED' })\n\n})\n\nTest('WorkerClient.maximumDuration', async (test) => {\n\n  let maximumDuration = 10000\n  let worker = new WorkerClient({ 'maximumDuration': maximumDuration })\n\n  try {\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n    worker.maximumDuration = maximumDuration = 5000\n\n    test.is(worker.maximumDuration, maximumDuration)\n    test.is(worker.option.maximumDuration, maximumDuration)\n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.module.getPid(duration) throws WorkerClientRejectedError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  await test.throwsAsync(Promise.all([ worker.module.getPid(2500), worker.exit() ]), { 'instanceOf': WorkerClientRejectedError })\n\n})\n\nTest('WorkerClient.ping() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n\n    let maximumDuration = null\n    maximumDuration = worker.maximumDuration\n\n    worker.maximumDuration = 1    \n    await test.throwsAsync(worker.ping(), { 'instanceOf': WorkerClientDurationExceededError })\n    worker.maximumDuration = maximumDuration    \n\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.exit() throws WorkerClientDurationExceededError', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n\n  let maximumDuration = null\n  maximumDuration = worker.maximumDuration\n\n  worker.maximumDuration = 1    \n  await test.throwsAsync(worker.exit(), { 'instanceOf': WorkerClientDurationExceededError })\n  worker.maximumDuration = maximumDuration    \n\n})\n\nTest('WorkerClient.module.throwException(duration) throws WorkerExceptionError', async (test) => {\n\n  let worker = new WorkerClient(Require.resolve('./worker.js'))\n\n  try {\n    await test.throwsAsync(worker.module.throwException(), { 'message': 'WorkerExceptionError' })\n  } finally {\n    await worker.exit()\n  }\n\n})\n\nTest('WorkerClient.disconnect()', async (test) => {\n\n  let worker = new WorkerClient()\n\n  await worker.ping() // establish ready\n  await test.notThrowsAsync(worker.disconnect())\n\n})\n\nTest('WorkerClient.module.then', async (test) => {\n\n  let worker = new WorkerClient()\n\n  try {\n    test.falsy(worker.module.then)\n  } finally {\n    await worker.exit()\n  }\n\n})\n"],"file":"worker-client.test.cjs"}