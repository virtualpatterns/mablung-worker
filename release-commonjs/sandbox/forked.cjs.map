{"version":3,"sources":["../../source/sandbox/forked.js"],"names":["Process","process","outputStream","FileSystem","createWriteStream","errorStream","_console","Console","on","error","log","close","dir","argv","_onMessage","message","off","setTimeout","exit"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,OAAO,GAAGC,OAAhB;AAEA,IAAIC,YAAY,GAAG,IAAnB;AACAA,YAAY,GAAGC,YAAWC,iBAAX,CAA6B,cAA7B,EAA6C;AAAE,cAAY;AAAd,CAA7C,CAAf;AAEA,IAAIC,WAAW,GAAG,IAAlB;AACAA,WAAW,GAAGF,YAAWC,iBAAX,CAA6B,cAA7B,EAA6C;AAAE,cAAY;AAAd,CAA7C,CAAd;;AAEA,IAAIE,QAAQ,GAAG,IAAIC,iBAAJ,CAAY;AACzB,eAAa,KADY;AAEzB,kBAAgB,KAFS;AAGzB,YAAUF,WAHe;AAIzB,YAAUH;AAJe,CAAZ,CAAf;;AAOAF,OAAO,CAACQ,EAAR,CAAW,mBAAX,EAAiCC,KAAD,IAAW;AACzCH,EAAAA,QAAQ,CAACG,KAAT,CAAe,6DAAf;;AACAH,EAAAA,QAAQ,CAACG,KAAT,CAAeA,KAAf;AACD,CAHD;AAKAT,OAAO,CAACQ,EAAR,CAAW,MAAX,EAAmB,MAAM;AACvBF,EAAAA,QAAQ,CAACI,GAAT,CAAa,2CAAb;;AACAJ,EAAAA,QAAQ,CAACG,KAAT,CAAe,2CAAf;;AAEAP,EAAAA,YAAY,CAACS,KAAb;AACAN,EAAAA,WAAW,CAACM,KAAZ;AAED,CAPD;;AASAL,QAAQ,CAACI,GAAT,CAAa,MAAb;;AACAJ,QAAQ,CAACM,GAAT,CAAaZ,OAAO,CAACa,IAArB;;AACAP,QAAQ,CAACG,KAAT,CAAe,MAAf;;AAEA,IAAIK,UAAU,GAAG,IAAjB;AAEAd,OAAO,CAACQ,EAAR,CAAW,SAAX,EAAsBM,UAAU,GAAIC,OAAD,IAAa;AAC9CT,EAAAA,QAAQ,CAACI,GAAT,CAAa,kEAAb;;AACAJ,EAAAA,QAAQ,CAACM,GAAT,CAAaG,OAAb;;AAEAf,EAAAA,OAAO,CAACgB,GAAR,CAAY,SAAZ,EAAuBF,UAAvB;AACAA,EAAAA,UAAU,GAAG,IAAb;AAEAG,EAAAA,UAAU,CAAC,MAAM;AACfjB,IAAAA,OAAO,CAACkB,IAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAID,CAXD","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { Console } from 'console'\nimport FileSystem from 'fs'\n\nconst Process = process\n\nlet outputStream = null\noutputStream = FileSystem.createWriteStream('./forked.out', { 'encoding': 'utf8' })\n\nlet errorStream = null\nerrorStream = FileSystem.createWriteStream('./forked.err', { 'encoding': 'utf8' })\n\nlet _console = new Console({\n  'colorMode': false,\n  'ignoreErrors': false,\n  'stderr': errorStream,\n  'stdout': outputStream\n})\n\nProcess.on('uncaughtException', (error) => {\n  _console.error('CHILD Process.on(\\'uncaughtException\\', (error) => { ... })')\n  _console.error(error)\n})\n\nProcess.on('exit', () => {\n  _console.log('CHILD Process.on(\\'exit\\', () => { ... })')\n  _console.error('CHILD Process.on(\\'exit\\', () => { ... })')\n\n  outputStream.close()\n  errorStream.close()\n \n})\n\n_console.log('HELO')\n_console.dir(Process.argv)\n_console.error('HELO')\n\nlet _onMessage = null\n\nProcess.on('message', _onMessage = (message) => {\n  _console.log('CHILD Process.on(\\'message\\', _onMessage = (message) => { ... })')\n  _console.dir(message)\n\n  Process.off('message', _onMessage)\n  _onMessage = null\n\n  setTimeout(() => {\n    Process.exit()\n  }, 2500)\n\n})\n"],"file":"forked.cjs"}