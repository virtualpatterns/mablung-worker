{"version":3,"sources":["../../../source/library/worker-pool/random-worker-pool.js"],"names":["RandomWorkerPool","WorkerPool","constructor","parameter","_selectProcess","process","Is","null","isConnected","_getProcess","Math","round","random","numberOfProcess"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA,MAAMA,gBAAN,SAA+BC,sBAA/B,CAA0C;AAExCC,EAAAA,WAAW,CAAC,GAAGC,SAAJ,EAAe;AACxB,UAAM,GAAGA,SAAT;AACD;;AAEmB,QAAdC,cAAc,GAAG;AAErB,QAAIC,OAAO,GAAG,IAAd;;AAEA,WAAOC,cAAGC,IAAH,CAAQF,OAAR,KAAoB,CAACA,OAAO,CAACG,WAApC,EAAiD;AAC/CH,MAAAA,OAAO,GAAG,KAAKI,WAAL,CAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAKC,eAAL,GAAuB,CAAxC,CAAX,CAAjB,CAAV;AACD;;AAED,WAAOR,OAAP;AAED;;AAhBuC","sourcesContent":["import { Is } from '@virtualpatterns/mablung-is'\n\nimport { WorkerPool } from '../worker-pool.js'\n\nclass RandomWorkerPool extends WorkerPool {\n\n  constructor(...parameter) {\n    super(...parameter)\n  }\n\n  async _selectProcess() {\n\n    let process = null\n\n    while (Is.null(process) || !process.isConnected) {\n      process = this._getProcess(Math.round(Math.random() * (this.numberOfProcess - 1)))\n    }\n\n    return process\n\n  }\n\n}\n\nexport { RandomWorkerPool }\n\n"],"file":"random-worker-pool.cjs"}